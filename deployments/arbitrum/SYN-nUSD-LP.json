{
  "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "stakingContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "uniV3Pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapPairSynapseTokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "synapseLpTokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "synapseSwap",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "synapseLpTokenCount",
              "type": "uint256"
            }
          ],
          "internalType": "struct SynapseStrategyV2.SynapseStrategySettings",
          "name": "_synapseStrategySettings",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "platformToken",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "reward",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapPair",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VariableRewardsStrategy.RewardSwapPair[]",
              "name": "rewardSwapPairs",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "timelock",
              "type": "address"
            }
          ],
          "internalType": "struct VariableRewardsStrategy.VariableRewardsStrategySettings",
          "name": "_settings",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "depositToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minTokensToReinvest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "devFeeBips",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reinvestRewardBips",
              "type": "uint256"
            }
          ],
          "internalType": "struct YakStrategyV2.StrategySettings",
          "name": "_strategySettings",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "swapPair",
          "type": "address"
        }
      ],
      "name": "AddReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AllowDepositor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newValue",
          "type": "bool"
        }
      ],
      "name": "DepositsEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalDeposits",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "Reinvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RemoveDepositor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        }
      ],
      "name": "RemoveReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "UpdateAdminFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "UpdateDevAddr",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "UpdateDevFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "UpdateMaxTokensToDepositWithoutReinvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "UpdateMinTokensToReinvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "UpdateReinvestReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_FEE_BIPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEPOSITS_ENABLED",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEV_FEE_BIPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TOKENS_TO_DEPOSIT_WITHOUT_REINVEST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_TOKENS_TO_REINVEST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REINVEST_REWARD_BIPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_swapPair",
          "type": "address"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_swapPair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_swapFee",
          "type": "uint256"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        }
      ],
      "name": "allowDepositor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedDepositors",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateDepositFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateWithdrawFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "depositWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimateDeployedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimateReinvestReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getDepositTokensForShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSharesForDepositTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miniChef",
      "outputs": [
        {
          "internalType": "contract IMiniChefV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfAllowedDepositors",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reinvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        }
      ],
      "name": "removeDepositor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        }
      ],
      "name": "removeReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minReturnAmountAccepted",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "rescueDeployedFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "revokeAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardSwapPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "reward",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "swapPair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supportedRewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapPairSynapseTokenIn",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "synapseLpTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "synapseLpTokenIn",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "synapseLpTokenIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "synapseSwap",
      "outputs": [
        {
          "internalType": "contract ISynapseSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniV3Pool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "updateAdminFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newValue",
          "type": "bool"
        }
      ],
      "name": "updateDepositsEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "updateDevAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "updateDevFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "updateMaxTokensToDepositWithoutReinvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "updateMinTokensToReinvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "updateReinvestReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
  "receipt": {
    "to": null,
    "from": "0xDcEDF06Fd33E1D7b6eb4b309f779a0e9D3172e44",
    "contractAddress": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
    "transactionIndex": 4,
    "gasUsed": "28980660",
    "logsBloom": "0x
    "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565",
    "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 97653325,
        "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
        "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dcedf06fd33e1d7b6eb4b309f779a0e9d3172e44"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 97653325,
        "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
        "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
        "topics": [
          "0x481f79ac3a523b6d6db3c5a720e190e986d1cc1b41adcdf50f9caef849901100"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000174876e800",
        "logIndex": 7,
        "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 97653325,
        "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
        "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
        "topics": [
          "0x2a42303d002f0ba6cfe8259c91d4684443fb0b3de286ba74991175d651726131"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002bc",
        "logIndex": 8,
        "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 97653325,
        "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
        "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
        "topics": [
          "0xe7f97d51d307dc44045597c9978bec0f842e6bb40d19b9444084cfa30d9ed4f2"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012c",
        "logIndex": 9,
        "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 97653325,
        "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
        "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
        "topics": [
          "0x7b014ed3854e7f5cb0218d58b3c6ae7d53a68bb0af2f67bfb029ea42c38a7e85"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 10,
        "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 97653325,
        "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
        "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000dcedf06fd33e1d7b6eb4b309f779a0e9d3172e44",
          "0x000000000000000000000000dcedf06fd33e1d7b6eb4b309f779a0e9d3172e44"
        ],
        "data": "0x",
        "logIndex": 11,
        "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 97653325,
        "transactionHash": "0x59aedf089af5591b7a0632330fa0f18152cdcf6d0648e3bbcc9835d9fa73286e",
        "address": "0x1a7d36D12e12ABfA91e8da437bDa4c86657163e5",
        "topics": [
          "0xc7606d21ac05cd309191543e409f0845c016120563783d70e4f41419dc0ef234"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 12,
        "blockHash": "0xfa6af4c3e88c95810122b4e788dfe2c8fc6220d3ce55fa18305cf30a38715565"
      }
    ],
    "blockNumber": 97653325,
    "cumulativeGasUsed": "30893664",
    "status": 1,
    "byzantium": true
  },
  "args": [
    {
      "stakingContract": "0x73186f2Cf2493f20836b17b21ae79fc12934E207",
      "pid": "3",
      "uniV3Pool": "0xb7c9609cC9083E135d9315C355dB4334c07E7c2C",
      "swapPairSynapseTokenIn": "0x905dfcd5649217c42684f23958568e533c711aa3",
      "synapseLpTokenIn": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
      "synapseSwap": "0x9Dd329F5411466d9e0C488fF72519CA9fEf0cb40",
      "synapseLpTokenCount": "3"
    },
    {
      "name": "Yield Yak: SYN nUSD-LP",
      "platformToken": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
      "rewardSwapPairs": [],
      "timelock": "0xDcEDF06Fd33E1D7b6eb4b309f779a0e9D3172e44"
    },
    {
      "depositToken": "0xcFd72be67Ee69A0dd7cF0f846Fc0D98C33d60F16",
      "rewardToken": "0x080F6AEd32Fc474DD5717105Dba5ea57268F46eb",
      "minTokensToReinvest": "100000000000",
      "devFeeBips": 700,
      "reinvestRewardBips": 300
    }
  ],
  "solcInputHash": "5ba317b921e9cecab7d5475ee0378a38",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uniV3Pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapPairSynapseTokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"synapseLpTokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"synapseSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"synapseLpTokenCount\",\"type\":\"uint256\"}],\"internalType\":\"struct SynapseStrategyV2.SynapseStrategySettings\",\"name\":\"_synapseStrategySettings\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"platformToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"internalType\":\"struct VariableRewardsStrategy.RewardSwapPair[]\",\"name\":\"rewardSwapPairs\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"timelock\",\"type\":\"address\"}],\"internalType\":\"struct VariableRewardsStrategy.VariableRewardsStrategySettings\",\"name\":\"_settings\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"depositToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokensToReinvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"devFeeBips\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reinvestRewardBips\",\"type\":\"uint256\"}],\"internalType\":\"struct YakStrategyV2.StrategySettings\",\"name\":\"_strategySettings\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapPair\",\"type\":\"address\"}],\"name\":\"AddReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AllowDepositor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"DepositsEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalDeposits\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"Reinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveDepositor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"RemoveReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateAdminFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"UpdateDevAddr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateDevFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateMaxTokensToDepositWithoutReinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateMinTokensToReinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UpdateReinvestReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_FEE_BIPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSITS_ENABLED\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEV_FEE_BIPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOKENS_TO_DEPOSIT_WITHOUT_REINVEST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TOKENS_TO_REINVEST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REINVEST_REWARD_BIPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapPair\",\"type\":\"address\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_swapFee\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"allowDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedDepositors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateWithdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"depositWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimateDeployedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimateReinvestReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getDepositTokensForShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSharesForDepositTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miniChef\",\"outputs\":[{\"internalType\":\"contract IMiniChefV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfAllowedDepositors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"removeDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"removeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minReturnAmountAccepted\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"rescueDeployedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardSwapPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedRewards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapPairSynapseTokenIn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"synapseLpTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"synapseLpTokenIn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"synapseLpTokenIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"synapseSwap\",\"outputs\":[{\"internalType\":\"contract ISynapseSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniV3Pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateAdminFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"updateDepositsEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"updateDevAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateDevFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateMaxTokensToDepositWithoutReinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateMinTokensToReinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"updateReinvestReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowDepositor(address)\":{\"params\":{\"depositor\":\"address\"}},\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"returns\":{\"_0\":\"The number of tokens approved\"}},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve) It is recommended to use increaseAllowance and decreaseAllowance instead\",\"params\":{\"amount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"Whether or not the approval succeeded\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"returns\":{\"_0\":\"The number of tokens held\"}},\"checkReward()\":{\"returns\":{\"_0\":\"reward tokens\"}},\"deposit(uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit\"}},\"depositWithPermit(uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"_amount\":\"Amount of tokens to deposit\",\"_deadline\":\"The time at which to expire the signature\",\"_r\":\"Half of the ECDSA signature pair\",\"_s\":\"Half of the ECDSA signature pair\",\"_v\":\"The recovery byte of the signature\"}},\"estimateDeployedBalance()\":{\"returns\":{\"_0\":\"deposit tokens after withdraw fee\"}},\"estimateReinvestReward()\":{\"returns\":{\"_0\":\"reward tokens\"}},\"getDepositTokensForShares(uint256)\":{\"params\":{\"amount\":\"receipt tokens\"},\"returns\":{\"_0\":\"deposit tokens\"}},\"getDomainSeparator()\":{\"returns\":{\"_0\":\"Separator\"}},\"getSharesForDepositTokens(uint256)\":{\"details\":\"If contract is empty, use 1:1 ratioCould return zero shares for very low amounts of deposit tokens\",\"params\":{\"amount\":\"deposit tokens\"},\"returns\":{\"_0\":\"receipt tokens\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The time at which to expire the signature\",\"owner\":\"The address to approve from\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"spender\":\"The address to be approved\",\"v\":\"The recovery byte of the signature\",\"value\":\"The number of tokens that are approved (2^256-1 means infinite)\"}},\"recoverAVAX(uint256)\":{\"params\":{\"amount\":\"amount\"}},\"recoverERC20(address,uint256)\":{\"params\":{\"tokenAddress\":\"token address\",\"tokenAmount\":\"amount to recover\"}},\"removeDepositor(address)\":{\"params\":{\"depositor\":\"address\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeAllowance(address,address)\":{\"params\":{\"spender\":\"address\",\"token\":\"address\"}},\"totalDeposits()\":{\"returns\":{\"_0\":\"total deposits available on the contract\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\",\"src\":\"The address of the source account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAdminFee(uint256)\":{\"details\":\"Deprecated; Kept for compatibility\",\"params\":{\"newValue\":\"fee in BIPS; required to be 0\"}},\"updateDepositsEnabled(bool)\":{\"params\":{\"newValue\":\"bool\"}},\"updateDevAddr(address)\":{\"params\":{\"newValue\":\"address\"}},\"updateDevFee(uint256)\":{\"params\":{\"newValue\":\"fee in BIPS\"}},\"updateMaxTokensToDepositWithoutReinvest(uint256)\":{\"params\":{\"newValue\":\"threshold\"}},\"updateMinTokensToReinvest(uint256)\":{\"params\":{\"newValue\":\"threshold\"}},\"updateReinvestReward(uint256)\":{\"params\":{\"newValue\":\"fee in BIPS\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowDepositor(address)\":{\"notice\":\"Add an allowed depositor\"},\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"checkReward()\":{\"notice\":\"Reward tokens available to strategy, including balance\"},\"deposit(uint256)\":{\"notice\":\"Deposit tokens to receive receipt tokens\"},\"depositWithPermit(uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Deposit using Permit\"},\"estimateDeployedBalance()\":{\"notice\":\"Estimate recoverable balance after withdraw fee\"},\"estimateReinvestReward()\":{\"notice\":\"Estimate reinvest reward\"},\"getDepositTokensForShares(uint256)\":{\"notice\":\"Calculate deposit tokens for a given amount of receipt tokens\"},\"getDomainSeparator()\":{\"notice\":\"EIP-712 Domain separator\"},\"getSharesForDepositTokens(uint256)\":{\"notice\":\"Calculate receipt tokens for a given amount of deposit tokens\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Triggers an approval from owner to spender\"},\"recoverAVAX(uint256)\":{\"notice\":\"Recover AVAX from contract\"},\"recoverERC20(address,uint256)\":{\"notice\":\"Recover ERC20 from contract\"},\"reinvest()\":{\"notice\":\"Reinvest reward tokens into deposit tokens\"},\"removeDepositor(address)\":{\"notice\":\"Remove an allowed depositor\"},\"revokeAllowance(address,address)\":{\"notice\":\"Revoke token allowance\"},\"totalDeposits()\":{\"notice\":\"This function returns a snapshot of last available quotes\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"},\"updateAdminFee(uint256)\":{\"notice\":\"Update admin fee\"},\"updateDepositsEnabled(bool)\":{\"notice\":\"Enable/disable deposits\"},\"updateDevAddr(address)\":{\"notice\":\"Update devAddr\"},\"updateDevFee(uint256)\":{\"notice\":\"Update developer fee\"},\"updateMaxTokensToDepositWithoutReinvest(uint256)\":{\"notice\":\"Update reinvest max threshold before a deposit\"},\"updateMinTokensToReinvest(uint256)\":{\"notice\":\"Update reinvest min threshold\"},\"updateReinvestReward(uint256)\":{\"notice\":\"Update reinvest reward\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol\":\"SynapseStrategyV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/YakERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\n\\nabstract contract YakERC20 {\\n    string public name = \\\"Yield Yak\\\";\\n    string public symbol = \\\"YRT\\\";\\n    uint8 public constant decimals = 18;\\n    uint256 public totalSupply;\\n\\n    mapping(address => mapping(address => uint256)) internal allowances;\\n    mapping(address => uint256) internal balances;\\n\\n    /// @dev keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\\n    bytes32 public constant DOMAIN_TYPEHASH = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f;\\n\\n    /// @dev keccak256(\\\"1\\\");\\n    bytes32 public constant VERSION_HASH = 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6;\\n\\n    /// @dev keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    constructor() {}\\n\\n    /**\\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\\n     * @param account The address of the account holding the funds\\n     * @param spender The address of the account spending the funds\\n     * @return The number of tokens approved\\n     */\\n    function allowance(address account, address spender) external view returns (uint256) {\\n        return allowances[account][spender];\\n    }\\n\\n    /**\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\n     * @dev This will overwrite the approval amount for `spender`\\n     * and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\n     * It is recommended to use increaseAllowance and decreaseAllowance instead\\n     * @param spender The address of the account which may transfer tokens\\n     * @param amount The number of tokens that are approved (2^256-1 means infinite)\\n     * @return Whether or not the approval succeeded\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Get the number of tokens held by the `account`\\n     * @param account The address of the account to get the balance of\\n     * @return The number of tokens held\\n     */\\n    function balanceOf(address account) external view returns (uint256) {\\n        return balances[account];\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\n     * @param dst The address of the destination account\\n     * @param amount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transfer(address dst, uint256 amount) external returns (bool) {\\n        _transferTokens(msg.sender, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\n     * @param src The address of the source account\\n     * @param dst The address of the destination account\\n     * @param amount The number of tokens to transfer\\n     * @return Whether or not the transfer succeeded\\n     */\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 amount\\n    ) external returns (bool) {\\n        address spender = msg.sender;\\n        uint256 spenderAllowance = allowances[src][spender];\\n\\n        if (spender != src && spenderAllowance != type(uint256).max) {\\n            uint256 newAllowance = spenderAllowance - amount;\\n            allowances[src][spender] = newAllowance;\\n\\n            emit Approval(src, spender, newAllowance);\\n        }\\n\\n        _transferTokens(src, dst, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Approval implementation\\n     * @param owner The address of the account which owns tokens\\n     * @param spender The address of the account which may transfer tokens\\n     * @param amount The number of tokens that are approved (2^256-1 means infinite)\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal {\\n        require(owner != address(0), \\\"_approve::owner zero address\\\");\\n        require(spender != address(0), \\\"_approve::spender zero address\\\");\\n        allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @notice Transfer implementation\\n     * @param from The address of the account which owns tokens\\n     * @param to The address of the account which is receiving tokens\\n     * @param value The number of tokens that are being transferred\\n     */\\n    function _transferTokens(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        require(to != address(0), \\\"_transferTokens: cannot transfer to the zero address\\\");\\n\\n        balances[from] = balances[from] - value;\\n        balances[to] = balances[to] + value;\\n        emit Transfer(from, to, value);\\n    }\\n\\n    function _mint(address to, uint256 value) internal {\\n        require(value > 0, \\\"_mint::zero shares\\\");\\n        totalSupply = totalSupply + value;\\n        balances[to] = balances[to] + value;\\n        emit Transfer(address(0), to, value);\\n    }\\n\\n    function _burn(address from, uint256 value) internal {\\n        balances[from] = balances[from] - value;\\n        totalSupply = totalSupply - value;\\n        emit Transfer(from, address(0), value);\\n    }\\n\\n    /**\\n     * @notice Triggers an approval from owner to spender\\n     * @param owner The address to approve from\\n     * @param spender The address to be approved\\n     * @param value The number of tokens that are approved (2^256-1 means infinite)\\n     * @param deadline The time at which to expire the signature\\n     * @param v The recovery byte of the signature\\n     * @param r Half of the ECDSA signature pair\\n     * @param s Half of the ECDSA signature pair\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        require(deadline >= block.timestamp, \\\"permit::expired\\\");\\n\\n        bytes32 encodeData = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline));\\n        _validateSignedData(owner, encodeData, v, r, s);\\n\\n        _approve(owner, spender, value);\\n    }\\n\\n    /**\\n     * @notice Recovers address from signed data and validates the signature\\n     * @param signer Address that signed the data\\n     * @param encodeData Data signed by the address\\n     * @param v The recovery byte of the signature\\n     * @param r Half of the ECDSA signature pair\\n     * @param s Half of the ECDSA signature pair\\n     */\\n    function _validateSignedData(\\n        address signer,\\n        bytes32 encodeData,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal view {\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", getDomainSeparator(), encodeData));\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        // Explicitly disallow authorizations for address(0) as ecrecover returns address(0) on malformed messages\\n        require(recoveredAddress != address(0) && recoveredAddress == signer, \\\"Arch::validateSig: invalid signature\\\");\\n    }\\n\\n    /**\\n     * @notice EIP-712 Domain separator\\n     * @return Separator\\n     */\\n    function getDomainSeparator() public view returns (bytes32) {\\n        return\\n            keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), VERSION_HASH, _getChainId(), address(this)));\\n    }\\n\\n    /**\\n     * @notice Current id of the chain where this contract is deployed\\n     * @return Chain id\\n     */\\n    function _getChainId() internal view returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\",\"keccak256\":\"0x893040cb129e3428494993115424a9e7549ae5935e80b3c406ee672d7199aa70\",\"license\":\"MIT\"},\"contracts/YakStrategyV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./lib/Ownable.sol\\\";\\nimport \\\"./lib/Permissioned.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./YakERC20.sol\\\";\\nimport \\\"./lib/SafeERC20.sol\\\";\\n\\n/**\\n * @notice YakStrategy should be inherited by new strategies\\n */\\nabstract contract YakStrategyV2 is YakERC20, Ownable, Permissioned {\\n    using SafeERC20 for IERC20;\\n\\n    struct StrategySettings {\\n        address depositToken;\\n        address rewardToken;\\n        uint256 minTokensToReinvest;\\n        uint256 devFeeBips;\\n        uint256 reinvestRewardBips;\\n    }\\n\\n    IERC20 public immutable depositToken;\\n    IERC20 public immutable rewardToken;\\n    address public devAddr;\\n\\n    uint256 public MIN_TOKENS_TO_REINVEST;\\n    uint256 public MAX_TOKENS_TO_DEPOSIT_WITHOUT_REINVEST;\\n    bool public DEPOSITS_ENABLED;\\n\\n    uint256 public ADMIN_FEE_BIPS;\\n    uint256 public REINVEST_REWARD_BIPS;\\n    uint256 public DEV_FEE_BIPS;\\n\\n    uint256 internal constant BIPS_DIVISOR = 10000;\\n    uint256 internal constant MAX_UINT = type(uint256).max;\\n\\n    event Deposit(address indexed account, uint256 amount);\\n    event Withdraw(address indexed account, uint256 amount);\\n    event Reinvest(uint256 newTotalDeposits, uint256 newTotalSupply);\\n    event Recovered(address token, uint256 amount);\\n    event UpdateAdminFee(uint256 oldValue, uint256 newValue);\\n    event UpdateDevFee(uint256 oldValue, uint256 newValue);\\n    event UpdateReinvestReward(uint256 oldValue, uint256 newValue);\\n    event UpdateMinTokensToReinvest(uint256 oldValue, uint256 newValue);\\n    event UpdateMaxTokensToDepositWithoutReinvest(uint256 oldValue, uint256 newValue);\\n    event UpdateDevAddr(address oldValue, address newValue);\\n    event DepositsEnabled(bool newValue);\\n\\n    /**\\n     * @notice Throws if called by smart contract\\n     */\\n    modifier onlyEOA() {\\n        require(tx.origin == msg.sender, \\\"YakStrategy::onlyEOA\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Only called by dev\\n     */\\n    modifier onlyDev() {\\n        require(msg.sender == devAddr, \\\"YakStrategy::onlyDev\\\");\\n        _;\\n    }\\n\\n    constructor(StrategySettings memory _strategySettings) {\\n        depositToken = IERC20(_strategySettings.depositToken);\\n        rewardToken = IERC20(_strategySettings.rewardToken);\\n        updateMinTokensToReinvest(_strategySettings.minTokensToReinvest);\\n        updateDevFee(_strategySettings.devFeeBips);\\n        updateReinvestReward(_strategySettings.reinvestRewardBips);\\n    }\\n\\n    /**\\n     * @notice Revoke token allowance\\n     * @param token address\\n     * @param spender address\\n     */\\n    function revokeAllowance(address token, address spender) external onlyOwner {\\n        require(IERC20(token).approve(spender, 0));\\n    }\\n\\n    /**\\n     * @notice Deposit and deploy deposits tokens to the strategy\\n     * @dev Must mint receipt tokens to `msg.sender`\\n     * @param amount deposit tokens\\n     */\\n    function deposit(uint256 amount) external virtual;\\n\\n    /**\\n     * @notice Deposit using Permit\\n     * @dev Should revert for tokens without Permit\\n     * @param amount Amount of tokens to deposit\\n     * @param deadline The time at which to expire the signature\\n     * @param v The recovery byte of the signature\\n     * @param r Half of the ECDSA signature pair\\n     * @param s Half of the ECDSA signature pair\\n     */\\n    function depositWithPermit(\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external virtual;\\n\\n    /**\\n     * @notice Deposit on behalf of another account\\n     * @dev Must mint receipt tokens to `account`\\n     * @param account address to receive receipt tokens\\n     * @param amount deposit tokens\\n     */\\n    function depositFor(address account, uint256 amount) external virtual;\\n\\n    /**\\n     * @notice Redeem receipt tokens for deposit tokens\\n     * @param amount receipt tokens\\n     */\\n    function withdraw(uint256 amount) external virtual;\\n\\n    /**\\n     * @notice Reinvest reward tokens into deposit tokens\\n     */\\n    function reinvest() external virtual;\\n\\n    /**\\n     * @notice Estimate reinvest reward\\n     * @return reward tokens\\n     */\\n    function estimateReinvestReward() external view returns (uint256) {\\n        uint256 unclaimedRewards = checkReward();\\n        if (unclaimedRewards >= MIN_TOKENS_TO_REINVEST) {\\n            return (unclaimedRewards * REINVEST_REWARD_BIPS) / BIPS_DIVISOR;\\n        }\\n        return 0;\\n    }\\n\\n    /**\\n     * @notice Reward tokens available to strategy, including balance\\n     * @return reward tokens\\n     */\\n    function checkReward() public view virtual returns (uint256);\\n\\n    /**\\n     * @notice Estimated deposit token balance deployed by strategy, excluding balance\\n     * @return deposit tokens\\n     */\\n    function estimateDeployedBalance() external view virtual returns (uint256);\\n\\n    /**\\n     * @notice Rescue all available deployed deposit tokens back to Strategy\\n     * @param minReturnAmountAccepted min deposit tokens to receive\\n     * @param disableDeposits bool\\n     */\\n    function rescueDeployedFunds(uint256 minReturnAmountAccepted, bool disableDeposits) external virtual;\\n\\n    /**\\n     * @notice This function returns a snapshot of last available quotes\\n     * @return total deposits available on the contract\\n     */\\n    function totalDeposits() public view virtual returns (uint256);\\n\\n    /**\\n     * @notice Calculate receipt tokens for a given amount of deposit tokens\\n     * @dev If contract is empty, use 1:1 ratio\\n     * @dev Could return zero shares for very low amounts of deposit tokens\\n     * @param amount deposit tokens\\n     * @return receipt tokens\\n     */\\n    function getSharesForDepositTokens(uint256 amount) public view returns (uint256) {\\n        if (totalSupply == 0 || totalDeposits() == 0) {\\n            return amount;\\n        }\\n        return (amount * totalSupply) / totalDeposits();\\n    }\\n\\n    /**\\n     * @notice Calculate deposit tokens for a given amount of receipt tokens\\n     * @param amount receipt tokens\\n     * @return deposit tokens\\n     */\\n    function getDepositTokensForShares(uint256 amount) public view returns (uint256) {\\n        if (totalSupply == 0 || totalDeposits() == 0) {\\n            return 0;\\n        }\\n        return (amount * totalDeposits()) / totalSupply;\\n    }\\n\\n    /**\\n     * @notice Update reinvest min threshold\\n     * @param newValue threshold\\n     */\\n    function updateMinTokensToReinvest(uint256 newValue) public onlyOwner {\\n        emit UpdateMinTokensToReinvest(MIN_TOKENS_TO_REINVEST, newValue);\\n        MIN_TOKENS_TO_REINVEST = newValue;\\n    }\\n\\n    /**\\n     * @notice Update reinvest max threshold before a deposit\\n     * @param newValue threshold\\n     */\\n    function updateMaxTokensToDepositWithoutReinvest(uint256 newValue) public onlyOwner {\\n        emit UpdateMaxTokensToDepositWithoutReinvest(MAX_TOKENS_TO_DEPOSIT_WITHOUT_REINVEST, newValue);\\n        MAX_TOKENS_TO_DEPOSIT_WITHOUT_REINVEST = newValue;\\n    }\\n\\n    /**\\n     * @notice Update admin fee\\n     * @dev Deprecated; Kept for compatibility\\n     * @param newValue fee in BIPS; required to be 0\\n     */\\n    function updateAdminFee(uint256 newValue) public onlyOwner {\\n        require(newValue == 0);\\n        emit UpdateAdminFee(ADMIN_FEE_BIPS, newValue);\\n        ADMIN_FEE_BIPS = newValue;\\n    }\\n\\n    /**\\n     * @notice Update developer fee\\n     * @param newValue fee in BIPS\\n     */\\n    function updateDevFee(uint256 newValue) public onlyOwner {\\n        require(newValue + REINVEST_REWARD_BIPS <= BIPS_DIVISOR);\\n        emit UpdateDevFee(DEV_FEE_BIPS, newValue);\\n        DEV_FEE_BIPS = newValue;\\n    }\\n\\n    /**\\n     * @notice Update reinvest reward\\n     * @param newValue fee in BIPS\\n     */\\n    function updateReinvestReward(uint256 newValue) public onlyOwner {\\n        require(newValue + DEV_FEE_BIPS <= BIPS_DIVISOR);\\n        emit UpdateReinvestReward(REINVEST_REWARD_BIPS, newValue);\\n        REINVEST_REWARD_BIPS = newValue;\\n    }\\n\\n    /**\\n     * @notice Enable/disable deposits\\n     * @param newValue bool\\n     */\\n    function updateDepositsEnabled(bool newValue) public onlyOwner {\\n        require(DEPOSITS_ENABLED != newValue);\\n        DEPOSITS_ENABLED = newValue;\\n        emit DepositsEnabled(newValue);\\n    }\\n\\n    /**\\n     * @notice Update devAddr\\n     * @param newValue address\\n     */\\n    function updateDevAddr(address newValue) public onlyDev {\\n        emit UpdateDevAddr(devAddr, newValue);\\n        devAddr = newValue;\\n    }\\n\\n    /**\\n     * @notice Recover ERC20 from contract\\n     * @param tokenAddress token address\\n     * @param tokenAmount amount to recover\\n     */\\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\\n        require(tokenAmount > 0);\\n        IERC20(tokenAddress).safeTransfer(msg.sender, tokenAmount);\\n        emit Recovered(tokenAddress, tokenAmount);\\n    }\\n\\n    /**\\n     * @notice Recover AVAX from contract\\n     * @param amount amount\\n     */\\n    function recoverAVAX(uint256 amount) external onlyOwner {\\n        require(amount > 0);\\n        payable(msg.sender).transfer(amount);\\n        emit Recovered(address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x12d445990b8f4abf1619c36afec7a247f33e5a1ed708125d2769a26b4da7bc6f\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x13986c2d371de8b29ffbbd5c2a5daa3fe6801801ba3b09530dbfc714d239adcb\",\"license\":\"MIT\"},\"contracts/interfaces/IPair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IPair is IERC20 {\\n    function token0() external pure returns (address);\\n\\n    function token1() external pure returns (address);\\n\\n    function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external;\\n\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n\\n    function mint(address to) external returns (uint256 liquidity);\\n\\n    function sync() external;\\n\\n    function stable() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9934224020ce9192433dcbefcc56ee1500985de4e9611ef42e00498fa0a99dd0\",\"license\":\"MIT\"},\"contracts/interfaces/IWAVAX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IWAVAX {\\n    function deposit() external payable;\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function withdraw(uint256) external;\\n\\n    function approve(address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x7770575951dbb745d5ba319363b64dd1165d9a6380e685f1e8aff5cf1ca2c608\",\"license\":\"MIT\"},\"contracts/lib/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity 0.8.13;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb0e33a6c916e2b3c1669c15106d704c72403bb6c102dd1e48ed99a1fca92988\",\"license\":\"MIT\"},\"contracts/lib/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return payable(msg.sender);\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x405ed171baa7364cae410dff96f36bfc945defc68675865b555206e14bb04b62\",\"license\":\"MIT\"},\"contracts/lib/DexLibrary.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./SafeERC20.sol\\\";\\nimport \\\"../interfaces/IPair.sol\\\";\\n\\nlibrary DexLibrary {\\n    using SafeERC20 for IERC20;\\n\\n    bytes private constant zeroBytes = new bytes(0);\\n    uint256 public constant DEFAULT_SWAP_FEE = 30;\\n    uint public constant BIPS_DIVISOR = 10000;\\n\\n    /**\\n     * @notice Swap directly through a Pair\\n     * @param amountIn input amount\\n     * @param fromToken address\\n     * @param toToken address\\n     * @param pair Pair used for swap\\n     * @return output amount\\n     */\\n    function swap(\\n        uint256 amountIn,\\n        address fromToken,\\n        address toToken,\\n        IPair pair\\n    ) internal returns (uint256) {\\n        return DexLibrary.swap(amountIn, fromToken, toToken, pair, DEFAULT_SWAP_FEE);\\n    }\\n\\n    /**\\n     * @notice Swap directly through a Pair\\n     * @param amountIn input amount\\n     * @param fromToken address\\n     * @param toToken address\\n     * @param pair Pair used for swap\\n     * @return output amount\\n     */\\n    function swap(\\n        uint256 amountIn,\\n        address fromToken,\\n        address toToken,\\n        IPair pair,\\n        uint256 swapFee\\n    ) internal returns (uint256) {\\n        (address token0, ) = sortTokens(fromToken, toToken);\\n        (uint112 reserve0, uint112 reserve1, ) = pair.getReserves();\\n        if (token0 != fromToken) (reserve0, reserve1) = (reserve1, reserve0);\\n        uint256 amountOut1 = 0;\\n        uint256 amountOut2 = getAmountOut(amountIn, reserve0, reserve1, swapFee);\\n        if (token0 != fromToken) (amountOut1, amountOut2) = (amountOut2, amountOut1);\\n        IERC20(fromToken).safeTransfer(address(pair), amountIn);\\n        pair.swap(amountOut1, amountOut2, address(this), zeroBytes);\\n        return amountOut2 > amountOut1 ? amountOut2 : amountOut1;\\n    }\\n\\n    function checkSwapPairCompatibility(\\n        IPair pair,\\n        address tokenA,\\n        address tokenB\\n    ) internal pure returns (bool) {\\n        return\\n            (tokenA == pair.token0() || tokenA == pair.token1()) &&\\n            (tokenB == pair.token0() || tokenB == pair.token1()) &&\\n            tokenA != tokenB;\\n    }\\n\\n    function estimateConversionThroughPair(\\n        uint256 amountIn,\\n        address fromToken,\\n        address toToken,\\n        IPair swapPair\\n    ) internal view returns (uint256) {\\n        return DexLibrary.estimateConversionThroughPair(amountIn, fromToken, toToken, swapPair, DEFAULT_SWAP_FEE);\\n    }\\n\\n    function estimateConversionThroughPair(\\n        uint256 amountIn,\\n        address fromToken,\\n        address toToken,\\n        IPair swapPair,\\n        uint256 swapFee\\n    ) internal view returns (uint256) {\\n        (address token0, ) = sortTokens(fromToken, toToken);\\n        (uint112 reserve0, uint112 reserve1, ) = swapPair.getReserves();\\n        if (token0 != fromToken) (reserve0, reserve1) = (reserve1, reserve0);\\n        return getAmountOut(amountIn, reserve0, reserve1, swapFee);\\n    }\\n\\n    /**\\n     * @notice Converts reward tokens to deposit tokens\\n     * @dev No price checks enforced\\n     * @param amount reward tokens\\n     * @return deposit tokens\\n     */\\n    function convertRewardTokensToDepositTokens(\\n        uint256 amount,\\n        address rewardToken,\\n        address depositToken,\\n        IPair swapPairToken0,\\n        IPair swapPairToken1\\n    ) internal returns (uint256) {\\n        return\\n            DexLibrary.convertRewardTokensToDepositTokens(\\n                amount,\\n                rewardToken,\\n                depositToken,\\n                swapPairToken0,\\n                DEFAULT_SWAP_FEE,\\n                swapPairToken1,\\n                DEFAULT_SWAP_FEE\\n            );\\n    }\\n\\n    /**\\n     * @notice Converts reward tokens to deposit tokens\\n     * @dev No price checks enforced\\n     * @param amount reward tokens\\n     * @return deposit tokens\\n     */\\n    function convertRewardTokensToDepositTokens(\\n        uint256 amount,\\n        address rewardToken,\\n        address depositToken,\\n        IPair swapPairToken0,\\n        uint256 swapFeeToken0,\\n        IPair swapPairToken1,\\n        uint256 swapFeeToken1\\n    ) internal returns (uint256) {\\n        uint256 amountIn = amount / 2;\\n        require(amountIn > 0, \\\"DexLibrary::_convertRewardTokensToDepositTokens\\\");\\n\\n        address token0 = IPair(depositToken).token0();\\n        uint256 amountOutToken0 = amountIn;\\n        if (rewardToken != token0) {\\n            amountOutToken0 = DexLibrary.swap(amountIn, rewardToken, token0, swapPairToken0, swapFeeToken0);\\n        }\\n\\n        address token1 = IPair(depositToken).token1();\\n        uint256 amountOutToken1 = amountIn;\\n        if (rewardToken != token1) {\\n            amountOutToken1 = DexLibrary.swap(amountIn, rewardToken, token1, swapPairToken1, swapFeeToken1);\\n        }\\n\\n        return DexLibrary.addLiquidity(depositToken, amountOutToken0, amountOutToken1);\\n    }\\n\\n    /**\\n     * @notice Add liquidity directly through a Pair\\n     * @dev Checks adding the max of each token amount\\n     * @param depositToken address\\n     * @param maxAmountIn0 amount token0\\n     * @param maxAmountIn1 amount token1\\n     * @return liquidity tokens\\n     */\\n    function addLiquidity(\\n        address depositToken,\\n        uint256 maxAmountIn0,\\n        uint256 maxAmountIn1\\n    ) internal returns (uint256) {\\n        (uint112 reserve0, uint112 reserve1, ) = IPair(address(depositToken)).getReserves();\\n        uint256 amountIn1 = _quoteLiquidityAmountOut(maxAmountIn0, reserve0, reserve1);\\n        if (amountIn1 > maxAmountIn1) {\\n            amountIn1 = maxAmountIn1;\\n            maxAmountIn0 = _quoteLiquidityAmountOut(maxAmountIn1, reserve1, reserve0);\\n        }\\n\\n        IERC20(IPair(depositToken).token0()).safeTransfer(depositToken, maxAmountIn0);\\n        IERC20(IPair(depositToken).token1()).safeTransfer(depositToken, amountIn1);\\n        return IPair(depositToken).mint(address(this));\\n    }\\n\\n    /**\\n     * @notice Quote liquidity amount out\\n     * @param amountIn input tokens\\n     * @param reserve0 size of input asset reserve\\n     * @param reserve1 size of output asset reserve\\n     * @return liquidity tokens\\n     */\\n    function _quoteLiquidityAmountOut(\\n        uint256 amountIn,\\n        uint256 reserve0,\\n        uint256 reserve1\\n    ) private pure returns (uint256) {\\n        return (amountIn * reserve1) / reserve0;\\n    }\\n\\n    /**\\n     * @notice Given two tokens, it'll return the tokens in the right order for the tokens pair\\n     * @dev TokenA must be different from TokenB, and both shouldn't be address(0), no validations\\n     * @param tokenA address\\n     * @param tokenB address\\n     * @return sorted tokens\\n     */\\n    function sortTokens(address tokenA, address tokenB) internal pure returns (address, address) {\\n        return tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\\n    }\\n\\n    /**\\n     * @notice Given an input amount of an asset and pair reserves, returns maximum output amount of the other asset\\n     * @param amountIn input asset\\n     * @param reserveIn size of input asset reserve\\n     * @param reserveOut size of output asset reserve\\n     * @return maximum output amount\\n     */\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut,\\n        uint256 swapFee\\n    ) internal pure returns (uint256) {\\n        uint256 amountInWithFee = amountIn * (BIPS_DIVISOR - swapFee);\\n        uint256 numerator = amountInWithFee * reserveOut;\\n        uint256 denominator = reserveIn * BIPS_DIVISOR + amountInWithFee;\\n        return numerator / denominator;\\n    }\\n}\\n\",\"keccak256\":\"0x00c364da9793e60b6f55fa73a532b8659d5892e0c817c710f1ea60ea6ff53093\",\"license\":\"MIT\"},\"contracts/lib/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x5ca8cde9011572844c97557e6fd9f5c33673465b910c10cfcc9e07859da97a14\",\"license\":\"MIT\"},\"contracts/lib/Permissioned.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\nabstract contract Permissioned is Ownable {\\n    uint256 public numberOfAllowedDepositors;\\n    mapping(address => bool) public allowedDepositors;\\n\\n    event AllowDepositor(address indexed account);\\n    event RemoveDepositor(address indexed account);\\n\\n    modifier onlyAllowedDeposits() {\\n        if (numberOfAllowedDepositors > 0) {\\n            require(allowedDepositors[msg.sender] == true, \\\"Permissioned::onlyAllowedDeposits, not allowed\\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice Add an allowed depositor\\n     * @param depositor address\\n     */\\n    function allowDepositor(address depositor) external onlyOwner {\\n        require(allowedDepositors[depositor] == false, \\\"Permissioned::allowDepositor\\\");\\n        allowedDepositors[depositor] = true;\\n        numberOfAllowedDepositors = numberOfAllowedDepositors + 1;\\n        emit AllowDepositor(depositor);\\n    }\\n\\n    /**\\n     * @notice Remove an allowed depositor\\n     * @param depositor address\\n     */\\n    function removeDepositor(address depositor) external onlyOwner {\\n        require(numberOfAllowedDepositors > 0, \\\"Permissioned::removeDepositor, no allowed depositors\\\");\\n        require(allowedDepositors[depositor] == true, \\\"Permissioned::removeDepositor, not allowed\\\");\\n        allowedDepositors[depositor] = false;\\n        numberOfAllowedDepositors = numberOfAllowedDepositors - 1;\\n        emit RemoveDepositor(depositor);\\n    }\\n}\\n\",\"keccak256\":\"0x32e276794130901e0464470794d697dfa8dcec1d2d1377a7422303dff8753aa5\",\"license\":\"MIT\"},\"contracts/lib/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0c0187783bd30018a8dddffa7e5aff1ad044dc6b7d63feca5010fdcb8dab2bac\",\"license\":\"MIT\"},\"contracts/strategies/VariableRewardsStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"../YakStrategyV2.sol\\\";\\nimport \\\"../interfaces/IPair.sol\\\";\\nimport \\\"../interfaces/IWAVAX.sol\\\";\\nimport \\\"../lib/DexLibrary.sol\\\";\\nimport \\\"../lib/SafeERC20.sol\\\";\\n\\n/**\\n * @notice VariableRewardsStrategy\\n */\\nabstract contract VariableRewardsStrategy is YakStrategyV2 {\\n    using SafeERC20 for IERC20;\\n\\n    IWAVAX internal immutable WAVAX;\\n\\n    struct VariableRewardsStrategySettings {\\n        string name;\\n        address platformToken;\\n        RewardSwapPair[] rewardSwapPairs;\\n        address timelock;\\n    }\\n\\n    struct Reward {\\n        address reward;\\n        uint256 amount;\\n    }\\n\\n    struct RewardSwapPair {\\n        address reward;\\n        address swapPair;\\n        uint256 swapFee;\\n    }\\n\\n    // reward -> swapPair\\n    mapping(address => RewardSwapPair) public rewardSwapPairs;\\n    address[] public supportedRewards;\\n    uint256 public rewardCount;\\n\\n    event AddReward(address rewardToken, address swapPair);\\n    event RemoveReward(address rewardToken);\\n\\n    constructor(VariableRewardsStrategySettings memory _settings, StrategySettings memory _strategySettings)\\n        YakStrategyV2(_strategySettings)\\n    {\\n        name = _settings.name;\\n        WAVAX = IWAVAX(_settings.platformToken);\\n        devAddr = 0xDcEDF06Fd33E1D7b6eb4b309f779a0e9D3172e44;\\n\\n        for (uint256 i = 0; i < _settings.rewardSwapPairs.length; i++) {\\n            _addReward(\\n                _settings.rewardSwapPairs[i].reward,\\n                _settings.rewardSwapPairs[i].swapPair,\\n                _settings.rewardSwapPairs[i].swapFee\\n            );\\n        }\\n\\n        updateDepositsEnabled(true);\\n        transferOwnership(_settings.timelock);\\n        emit Reinvest(0, 0);\\n    }\\n\\n    function addReward(address _rewardToken, address _swapPair) public onlyDev {\\n        _addReward(_rewardToken, _swapPair, DexLibrary.DEFAULT_SWAP_FEE);\\n    }\\n\\n    function addReward(\\n        address _rewardToken,\\n        address _swapPair,\\n        uint256 _swapFee\\n    ) public onlyDev {\\n        _addReward(_rewardToken, _swapPair, _swapFee);\\n    }\\n\\n    function _addReward(\\n        address _rewardToken,\\n        address _swapPair,\\n        uint256 _swapFee\\n    ) internal {\\n        if (_rewardToken != address(rewardToken)) {\\n            require(\\n                DexLibrary.checkSwapPairCompatibility(IPair(_swapPair), _rewardToken, address(rewardToken)),\\n                \\\"VariableRewardsStrategy::Swap pair does not contain reward token\\\"\\n            );\\n        }\\n        rewardSwapPairs[_rewardToken] = RewardSwapPair({reward: _rewardToken, swapPair: _swapPair, swapFee: _swapFee});\\n        supportedRewards.push(_rewardToken);\\n        rewardCount = rewardCount + 1;\\n        emit AddReward(_rewardToken, _swapPair);\\n    }\\n\\n    function removeReward(address _rewardToken) public onlyDev {\\n        delete rewardSwapPairs[_rewardToken];\\n        bool found = false;\\n        for (uint256 i = 0; i < supportedRewards.length; i++) {\\n            if (_rewardToken == supportedRewards[i]) {\\n                found = true;\\n                supportedRewards[i] = supportedRewards[supportedRewards.length - 1];\\n            }\\n        }\\n        require(found, \\\"VariableRewardsStrategy::Reward to delete not found!\\\");\\n        supportedRewards.pop();\\n        rewardCount = rewardCount - 1;\\n        emit RemoveReward(_rewardToken);\\n    }\\n\\n    function calculateDepositFee(uint256 _amount) public view returns (uint256) {\\n        return _calculateDepositFee(_amount);\\n    }\\n\\n    function calculateWithdrawFee(uint256 _amount) public view returns (uint256) {\\n        return _calculateWithdrawFee(_amount);\\n    }\\n\\n    /**\\n     * @notice Deposit tokens to receive receipt tokens\\n     * @param _amount Amount of tokens to deposit\\n     */\\n    function deposit(uint256 _amount) external override {\\n        _deposit(msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @notice Deposit using Permit\\n     * @param _amount Amount of tokens to deposit\\n     * @param _deadline The time at which to expire the signature\\n     * @param _v The recovery byte of the signature\\n     * @param _r Half of the ECDSA signature pair\\n     * @param _s Half of the ECDSA signature pair\\n     */\\n    function depositWithPermit(\\n        uint256 _amount,\\n        uint256 _deadline,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external override {\\n        depositToken.permit(msg.sender, address(this), _amount, _deadline, _v, _r, _s);\\n        _deposit(msg.sender, _amount);\\n    }\\n\\n    function depositFor(address _account, uint256 _amount) external override {\\n        _deposit(_account, _amount);\\n    }\\n\\n    function _deposit(address _account, uint256 _amount) internal {\\n        require(DEPOSITS_ENABLED == true, \\\"VariableRewardsStrategy::Deposits disabled\\\");\\n        uint256 maxPendingRewards = MAX_TOKENS_TO_DEPOSIT_WITHOUT_REINVEST;\\n        if (maxPendingRewards > 0) {\\n            uint256 estimatedTotalReward = checkReward();\\n            if (estimatedTotalReward > maxPendingRewards) {\\n                _reinvest(true);\\n            }\\n        }\\n        require(\\n            depositToken.transferFrom(msg.sender, address(this), _amount),\\n            \\\"VariableRewardsStrategy::Deposit token transfer failed\\\"\\n        );\\n        uint256 depositFee = _calculateDepositFee(_amount);\\n        _mint(_account, getSharesForDepositTokens(_amount - depositFee));\\n        _stakeDepositTokens(_amount, depositFee);\\n        emit Deposit(_account, _amount);\\n    }\\n\\n    /**\\n     * @notice Withdraw fee bips from underlying farm\\n     */\\n    function _getDepositFeeBips() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @notice Calculate deposit fee of underlying farm\\n     * @dev Override if deposit fee is calculated dynamically\\n     */\\n    function _calculateDepositFee(uint256 _amount) internal view virtual returns (uint256) {\\n        uint256 depositFeeBips = _getDepositFeeBips();\\n        return (_amount * depositFeeBips) / _bip();\\n    }\\n\\n    function withdraw(uint256 _amount) external override {\\n        uint256 depositTokenAmount = getDepositTokensForShares(_amount);\\n        require(depositTokenAmount > 0, \\\"VariableRewardsStrategy::Withdraw amount too low\\\");\\n        uint256 withdrawAmount = _withdrawFromStakingContract(depositTokenAmount);\\n        uint256 withdrawFee = _calculateWithdrawFee(depositTokenAmount);\\n        depositToken.safeTransfer(msg.sender, withdrawAmount - withdrawFee);\\n        _burn(msg.sender, _amount);\\n        emit Withdraw(msg.sender, depositTokenAmount);\\n    }\\n\\n    /**\\n     * @notice Withdraw fee bips from underlying farm\\n     * @dev Important: Do not override if withdraw fee is deducted from the amount returned by _withdrawFromStakingContract\\n     */\\n    function _getWithdrawFeeBips() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @notice Calculate withdraw fee of underlying farm\\n     * @dev Override if withdraw fee is calculated dynamically\\n     * @dev Important: Do not override if withdraw fee is deducted from the amount returned by _withdrawFromStakingContract\\n     */\\n    function _calculateWithdrawFee(uint256 _amount) internal view virtual returns (uint256) {\\n        uint256 withdrawFeeBips = _getWithdrawFeeBips();\\n        return (_amount * withdrawFeeBips) / _bip();\\n    }\\n\\n    function reinvest() external override onlyEOA {\\n        _reinvest(false);\\n    }\\n\\n    function _convertPoolRewardsToRewardToken() private returns (uint256) {\\n        uint256 rewardTokenAmount = rewardToken.balanceOf(address(this));\\n        uint256 count = supportedRewards.length;\\n        for (uint256 i = 0; i < count; i++) {\\n            address reward = supportedRewards[i];\\n            if (reward == address(WAVAX)) {\\n                uint256 balance = address(this).balance;\\n                if (balance > 0) {\\n                    WAVAX.deposit{value: balance}();\\n                }\\n                if (address(rewardToken) == address(WAVAX)) {\\n                    rewardTokenAmount += balance;\\n                    continue;\\n                }\\n            }\\n            uint256 amount = IERC20(reward).balanceOf(address(this));\\n            if (amount > 0) {\\n                address swapPair = rewardSwapPairs[reward].swapPair;\\n                if (swapPair > address(0)) {\\n                    rewardTokenAmount += DexLibrary.swap(\\n                        amount,\\n                        reward,\\n                        address(rewardToken),\\n                        IPair(swapPair),\\n                        rewardSwapPairs[reward].swapFee\\n                    );\\n                }\\n            }\\n        }\\n        return rewardTokenAmount;\\n    }\\n\\n    /**\\n     * @notice Reinvest rewards from staking contract to deposit tokens\\n     * @dev Reverts if the expected amount of tokens are not returned from the staking contract\\n     */\\n    function _reinvest(bool userDeposit) private {\\n        _getRewards();\\n        uint256 amount = _convertPoolRewardsToRewardToken();\\n        if (!userDeposit) {\\n            require(amount >= MIN_TOKENS_TO_REINVEST, \\\"VariableRewardsStrategy::Reinvest amount too low\\\");\\n        }\\n\\n        uint256 devFee = (amount * DEV_FEE_BIPS) / BIPS_DIVISOR;\\n        if (devFee > 0) {\\n            rewardToken.safeTransfer(devAddr, devFee);\\n        }\\n\\n        uint256 reinvestFee = (amount * REINVEST_REWARD_BIPS) / BIPS_DIVISOR;\\n        if (reinvestFee > 0) {\\n            rewardToken.safeTransfer(msg.sender, reinvestFee);\\n        }\\n\\n        uint256 depositTokenAmount = _convertRewardTokenToDepositToken(amount - devFee - reinvestFee);\\n\\n        uint256 depositFee = _calculateDepositFee(depositTokenAmount);\\n        _stakeDepositTokens(depositTokenAmount, depositFee);\\n        emit Reinvest(totalDeposits(), totalSupply);\\n    }\\n\\n    function _stakeDepositTokens(uint256 _amount, uint256 _depositFee) private {\\n        require(_amount > 0, \\\"VariableRewardsStrategy::Stake amount too low\\\");\\n        _depositToStakingContract(_amount, _depositFee);\\n    }\\n\\n    function checkReward() public view override returns (uint256) {\\n        Reward[] memory rewards = _pendingRewards();\\n        uint256 estimatedTotalReward = rewardToken.balanceOf(address(this));\\n        if (address(rewardToken) == address(WAVAX)) {\\n            estimatedTotalReward += address(this).balance;\\n        }\\n        for (uint256 i = 0; i < rewards.length; i++) {\\n            address reward = rewards[i].reward;\\n            if (reward == address(rewardToken)) {\\n                estimatedTotalReward += rewards[i].amount;\\n            } else if (reward > address(0)) {\\n                uint256 balance = IERC20(reward).balanceOf(address(this));\\n                uint256 amount = balance + rewards[i].amount;\\n                address swapPair = rewardSwapPairs[rewards[i].reward].swapPair;\\n                if (amount > 0 && swapPair > address(0)) {\\n                    estimatedTotalReward += DexLibrary.estimateConversionThroughPair(\\n                        amount,\\n                        reward,\\n                        address(rewardToken),\\n                        IPair(swapPair),\\n                        rewardSwapPairs[rewards[i].reward].swapFee\\n                    );\\n                }\\n            }\\n        }\\n        return estimatedTotalReward;\\n    }\\n\\n    /**\\n     * @notice Estimate recoverable balance after withdraw fee\\n     * @return deposit tokens after withdraw fee\\n     */\\n    function estimateDeployedBalance() external view override returns (uint256) {\\n        uint256 depositBalance = totalDeposits();\\n        uint256 withdrawFee = _calculateWithdrawFee(depositBalance);\\n        return depositBalance - withdrawFee;\\n    }\\n\\n    function rescueDeployedFunds(\\n        uint256 _minReturnAmountAccepted,\\n        bool /*_disableDeposits*/\\n    ) external override onlyOwner {\\n        uint256 balanceBefore = depositToken.balanceOf(address(this));\\n        _emergencyWithdraw();\\n        uint256 balanceAfter = depositToken.balanceOf(address(this));\\n        require(\\n            balanceAfter - balanceBefore >= _minReturnAmountAccepted,\\n            \\\"VariableRewardsStrategy::Emergency withdraw minimum return amount not reached\\\"\\n        );\\n        emit Reinvest(totalDeposits(), totalSupply);\\n        if (DEPOSITS_ENABLED == true) {\\n            updateDepositsEnabled(false);\\n        }\\n    }\\n\\n    function _bip() internal view virtual returns (uint256) {\\n        return 10000;\\n    }\\n\\n    /* VIRTUAL */\\n    function _convertRewardTokenToDepositToken(uint256 _fromAmount) internal virtual returns (uint256 toAmount);\\n\\n    function _depositToStakingContract(uint256 _amount, uint256 _depositFee) internal virtual;\\n\\n    function _withdrawFromStakingContract(uint256 _amount) internal virtual returns (uint256 withdrawAmount);\\n\\n    function _emergencyWithdraw() internal virtual;\\n\\n    function _getRewards() internal virtual;\\n\\n    function _pendingRewards() internal view virtual returns (Reward[] memory);\\n}\\n\",\"keccak256\":\"0x07fa36222338499532a94010f028e57ab701765fda96743d2ca8fe59f8d240ee\",\"license\":\"MIT\"},\"contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"../../VariableRewardsStrategy.sol\\\";\\n\\nimport \\\"./interfaces/ISynapseSwap.sol\\\";\\nimport \\\"./interfaces/IMiniChefV2.sol\\\";\\nimport \\\"./interfaces/IUniV3Pool.sol\\\";\\n\\ncontract SynapseStrategyV2 is VariableRewardsStrategy {\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 private constant SYN = IERC20(0x080F6AEd32Fc474DD5717105Dba5ea57268F46eb);\\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\\n\\n    address private immutable uniPoolTokenOut;\\n    bool private immutable zeroForOne;\\n    uint160 private immutable sqrtPriceLimitX96;\\n\\n    uint256 public immutable PID;\\n    IMiniChefV2 public immutable miniChef;\\n\\n    address public immutable uniV3Pool;\\n    ISynapseSwap public immutable synapseSwap;\\n    address public immutable synapseLpTokenIn;\\n    uint256 public immutable synapseLpTokenIndex;\\n    uint256 public immutable synapseLpTokenCount;\\n\\n    address public immutable swapPairSynapseTokenIn;\\n\\n    struct SynapseStrategySettings {\\n        address stakingContract;\\n        uint256 pid;\\n        address uniV3Pool;\\n        address swapPairSynapseTokenIn;\\n        address synapseLpTokenIn;\\n        address synapseSwap;\\n        uint256 synapseLpTokenCount;\\n    }\\n\\n    constructor(\\n        SynapseStrategySettings memory _synapseStrategySettings,\\n        VariableRewardsStrategySettings memory _settings,\\n        StrategySettings memory _strategySettings\\n    ) VariableRewardsStrategy(_settings, _strategySettings) {\\n        miniChef = IMiniChefV2(_synapseStrategySettings.stakingContract);\\n        PID = _synapseStrategySettings.pid;\\n        uniV3Pool = _synapseStrategySettings.uniV3Pool;\\n        swapPairSynapseTokenIn = _synapseStrategySettings.swapPairSynapseTokenIn;\\n        synapseLpTokenIn = _synapseStrategySettings.synapseLpTokenIn;\\n        synapseSwap = ISynapseSwap(_synapseStrategySettings.synapseSwap);\\n        synapseLpTokenCount = _synapseStrategySettings.synapseLpTokenCount;\\n        synapseLpTokenIndex = synapseSwap.getTokenIndex(synapseLpTokenIn);\\n        address uniPoolToken0 = IUniV3Pool(uniV3Pool).token0();\\n        address uniPoolToken1 = IUniV3Pool(uniV3Pool).token1();\\n        require(uniPoolToken0 == address(SYN) || uniPoolToken1 == address(SYN), \\\"Incompatible pool\\\");\\n        zeroForOne = true;\\n        uniPoolTokenOut = zeroForOne ? uniPoolToken1 : uniPoolToken0;\\n        sqrtPriceLimitX96 = zeroForOne ? MIN_SQRT_RATIO + 1 : MAX_SQRT_RATIO - 1;\\n    }\\n\\n    function _depositToStakingContract(uint256 _amount, uint256) internal override {\\n        IERC20(address(depositToken)).approve(address(miniChef), _amount);\\n        miniChef.deposit(PID, _amount, address(this));\\n        IERC20(address(depositToken)).approve(address(miniChef), 0);\\n    }\\n\\n    function _withdrawFromStakingContract(uint256 _amount) internal override returns (uint256 _withdrawAmount) {\\n        miniChef.withdraw(PID, _amount, address(this));\\n        return _amount;\\n    }\\n\\n    function _emergencyWithdraw() internal override {\\n        depositToken.approve(address(miniChef), 0);\\n        miniChef.emergencyWithdraw(PID, address(this));\\n    }\\n\\n    function _pendingRewards() internal view override returns (Reward[] memory) {\\n        Reward[] memory pendingRewards = new Reward[](1);\\n        uint256 pendingSYN = miniChef.pendingSynapse(PID, address(this));\\n        pendingRewards[0] = Reward({reward: address(SYN), amount: pendingSYN});\\n        return pendingRewards;\\n    }\\n\\n    function _getRewards() internal override {\\n        miniChef.harvest(PID, address(this));\\n    }\\n\\n    function totalDeposits() public view override returns (uint256) {\\n        (uint256 amount,) = miniChef.userInfo(PID, address(this));\\n        return amount;\\n    }\\n\\n    function _convertRewardTokenToDepositToken(uint256 fromAmount) internal override returns (uint256 toAmount) {\\n        (int256 amount0, int256 amount1) =\\n            IUniV3Pool(uniV3Pool).swap(address(this), zeroForOne, int256(fromAmount), sqrtPriceLimitX96, \\\"\\\");\\n        fromAmount = zeroForOne ? uint256(-amount1) : uint256(-amount0);\\n\\n        if (uniPoolTokenOut != synapseLpTokenIn) {\\n            fromAmount = DexLibrary.swap(fromAmount, uniPoolTokenOut, synapseLpTokenIn, IPair(swapPairSynapseTokenIn));\\n        }\\n\\n        IERC20(synapseLpTokenIn).approve(address(synapseSwap), fromAmount);\\n        uint256[] memory amounts = new uint256[](synapseLpTokenCount);\\n        amounts[synapseLpTokenIndex] = fromAmount;\\n        toAmount = synapseSwap.addLiquidity(amounts, 0, type(uint256).max);\\n    }\\n\\n    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata) external {\\n        require(msg.sender == uniV3Pool);\\n        rewardToken.safeTransfer(uniV3Pool, zeroForOne ? uint256(amount0Delta) : uint256(amount1Delta));\\n    }\\n}\\n\",\"keccak256\":\"0x4c3e656fc3c7058b69e67765662fa26590946c70a31c0245b094f17ea046e9d8\",\"license\":\"MIT\"},\"contracts/strategies/arbitrum/synapse/interfaces/IMiniChefV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IMiniChefV2 {\\n    function deposit(\\n        uint256 pid,\\n        uint256 amount,\\n        address to\\n    ) external;\\n\\n    function withdraw(\\n        uint256 pid,\\n        uint256 amount,\\n        address to\\n    ) external;\\n\\n    function userInfo(uint256 _pid, address _user) external view returns (uint256 amount, int256 rewardDebt);\\n\\n    function pendingSynapse(uint256 _pid, address _user) external view returns (uint256 pending);\\n\\n    function harvest(uint256 pid, address to) external;\\n\\n    function emergencyWithdraw(uint256 pid, address to) external;\\n}\\n\",\"keccak256\":\"0x57702260755f731be473825cef1621acbbe171ee779219182e536fb119ccbeaa\",\"license\":\"MIT\"},\"contracts/strategies/arbitrum/synapse/interfaces/ISynapseSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface ISynapseSwap {\\n    function addLiquidity(uint256[] calldata amounts, uint256 minToMint, uint256 deadline) external returns (uint256);\\n\\n    function getTokenIndex(address token) external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x21c3edd008219bc771dac29dadf8e01237b46bf4be4203721d4cf7f293c4daf4\",\"license\":\"MIT\"},\"contracts/strategies/arbitrum/synapse/interfaces/IUniV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IUniV3Pool {\\n    function token0() external pure returns (address);\\n    function token1() external pure returns (address);\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n}\\n\",\"keccak256\":\"0x61f7dfb002e3b2b74c3b46282bbd0570821f26d2a44b6e609c9fead12ef51405\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6102806040526009610240819052685969656c642059616b60b81b6102609081526200002f916000919062000c1d565b506040805180820190915260038082526216549560ea1b60209092019182526200005c9160019162000c1d565b503480156200006a57600080fd5b50604051620062da380380620062da8339810160408190526200008d9162001003565b600680546001600160a01b03191633908117909155604051839183918291908190600090600080516020620062ba833981519152908290a35080516001600160a01b0390811660805260208201511660a0526040810151620000ef90620004c3565b6060810151620000ff906200054f565b60808101516200010f90620005fa565b5081518051620001289160009160209091019062000c1d565b5060208201516001600160a01b031660c052600980546001600160a01b03191673dcedf06fd33e1d7b6eb4b309f779a0e9d3172e4417905560005b8260400151518110156200020557620001f0836040015182815181106200018e576200018e620010e9565b60200260200101516000015184604001518381518110620001b357620001b3620010e9565b60200260200101516020015185604001518481518110620001d857620001d8620010e9565b602002602001015160400151620006a560201b60201c565b80620001fc8162001115565b91505062000163565b5062000212600162000851565b60608201516200022290620008fb565b60408051600080825260208201527fc7606d21ac05cd309191543e409f0845c016120563783d70e4f41419dc0ef234910160405180910390a1505082516001600160a01b03908116610160526020840151610140526040808501518216610180526060850151821661022052608085015182166101c081905260a08601519092166101a081905260c08601516102005290516319b02f4960e21b81526004810192909252906366c0bd2490602401602060405180830381865afa158015620002ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000314919062001131565b60ff166101e081815250506000610180516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038991906200115d565b90506000610180516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f591906200115d565b90506001600160a01b03821673080f6aed32fc474dd5717105dba5ea57268f46eb14806200043f57506001600160a01b03811673080f6aed32fc474dd5717105dba5ea57268f46eb145b620004855760405162461bcd60e51b8152602060048201526011602482015270125b98dbdb5c185d1a589b19481c1bdbdb607a1b60448201526064015b60405180910390fd5b6001610100526001600160a01b03811660e052620004aa6401000276a360016200117b565b6001600160a01b03166101205250620012009350505050565b6006546001600160a01b031633146200050e5760405162461bcd60e51b815260206004820181905260248201526000805160206200629a83398151915260448201526064016200047c565b600a5460408051918252602082018390527f481f79ac3a523b6d6db3c5a720e190e986d1cc1b41adcdf50f9caef849901100910160405180910390a1600a55565b6006546001600160a01b031633146200059a5760405162461bcd60e51b815260206004820181905260248201526000805160206200629a83398151915260448201526064016200047c565b612710600e5482620005ad9190620011a9565b1115620005b957600080fd5b600f5460408051918252602082018390527f2a42303d002f0ba6cfe8259c91d4684443fb0b3de286ba74991175d651726131910160405180910390a1600f55565b6006546001600160a01b03163314620006455760405162461bcd60e51b815260206004820181905260248201526000805160206200629a83398151915260448201526064016200047c565b612710600f5482620006589190620011a9565b11156200066457600080fd5b600e5460408051918252602082018390527fe7f97d51d307dc44045597c9978bec0f842e6bb40d19b9444084cfa30d9ed4f2910160405180910390a1600e55565b60a0516001600160a01b0316836001600160a01b0316146200075157620006db828460a051620009f860201b620026e21760201c565b62000751576040805162461bcd60e51b81526020600482015260248101919091527f5661726961626c655265776172647353747261746567793a3a5377617020706160448201527f697220646f6573206e6f7420636f6e7461696e2072657761726420746f6b656e60648201526084016200047c565b604080516060810182526001600160a01b03808616808352858216602080850191825284860187815260008481526010909252958120945185549085166001600160a01b03199182161786559151600180870180549290961691841691909117909455945160029094019390935560118054808401825594527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68909301805490921690921790556012546200080691620011a9565b601255604080516001600160a01b038086168252841660208201527f916e172c080569186aa7ea048268267257cf7cc49505908863f747bca8620f80910160405180910390a1505050565b6006546001600160a01b031633146200089c5760405162461bcd60e51b815260206004820181905260248201526000805160206200629a83398151915260448201526064016200047c565b600c5481151560ff909116151503620008b457600080fd5b600c805460ff19168215159081179091556040519081527f7b014ed3854e7f5cb0218d58b3c6ae7d53a68bb0af2f67bfb029ea42c38a7e859060200160405180910390a150565b6006546001600160a01b03163314620009465760405162461bcd60e51b815260206004820181905260248201526000805160206200629a83398151915260448201526064016200047c565b6001600160a01b038116620009ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200047c565b6006546040516001600160a01b03808416921690600080516020620062ba83398151915290600090a3600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a5f91906200115d565b6001600160a01b0316836001600160a01b0316148062000af45750836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000ab9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000adf91906200115d565b6001600160a01b0316836001600160a01b0316145b801562000bf65750836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b6191906200115d565b6001600160a01b0316826001600160a01b0316148062000bf65750836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000bbb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000be191906200115d565b6001600160a01b0316826001600160a01b0316145b801562000c155750816001600160a01b0316836001600160a01b031614155b949350505050565b82805462000c2b90620011c4565b90600052602060002090601f01602090048101928262000c4f576000855562000c9a565b82601f1062000c6a57805160ff191683800117855562000c9a565b8280016001018555821562000c9a579182015b8281111562000c9a57825182559160200191906001019062000c7d565b5062000ca892915062000cac565b5090565b5b8082111562000ca8576000815560010162000cad565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171562000cfe5762000cfe62000cc3565b60405290565b604051608081016001600160401b038111828210171562000cfe5762000cfe62000cc3565b60405160e081016001600160401b038111828210171562000cfe5762000cfe62000cc3565b604051601f8201601f191681016001600160401b038111828210171562000d795762000d7962000cc3565b604052919050565b80516001600160a01b038116811462000d9957600080fd5b919050565b600082601f83011262000db057600080fd5b815160206001600160401b0382111562000dce5762000dce62000cc3565b62000dde818360051b0162000d4e565b8281526060928302850182019282820191908785111562000dfe57600080fd5b8387015b8581101562000e5c5781818a03121562000e1c5760008081fd5b62000e2662000cd9565b62000e318262000d81565b815262000e4086830162000d81565b8187015260408281015190820152845292840192810162000e02565b5090979650505050505050565b60006080828403121562000e7c57600080fd5b62000e8662000d04565b82519091506001600160401b038082111562000ea157600080fd5b818401915084601f83011262000eb657600080fd5b81518181111562000ecb5762000ecb62000cc3565b602062000ee1601f8301601f1916820162000d4e565b828152878284870101111562000ef657600080fd5b60005b8381101562000f1657858101830151828201840152820162000ef9565b8381111562000f285760008385840101525b50855262000f3886820162000d81565b9085015250604084015191508082111562000f5257600080fd5b5062000f618482850162000d9e565b60408301525062000f756060830162000d81565b606082015292915050565b600060a0828403121562000f9357600080fd5b60405160a081016001600160401b038111828210171562000fb85762000fb862000cc3565b60405290508062000fc98362000d81565b815262000fd96020840162000d81565b60208201526040830151604082015260608301516060820152608083015160808201525092915050565b60008060008385036101a08112156200101b57600080fd5b60e08112156200102a57600080fd5b506200103562000d29565b620010408562000d81565b8152602085015160208201526200105a6040860162000d81565b60408201526200106d6060860162000d81565b6060820152620010806080860162000d81565b60808201526200109360a0860162000d81565b60a082015260c0858101519082015260e08501519093506001600160401b03811115620010bf57600080fd5b620010cd8682870162000e69565b925050620010e085610100860162000f80565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016200112a576200112a620010ff565b5060010190565b6000602082840312156200114457600080fd5b815160ff811681146200115657600080fd5b9392505050565b6000602082840312156200117057600080fd5b620011568262000d81565b60006001600160a01b03828116848216808303821115620011a057620011a0620010ff565b01949350505050565b60008219821115620011bf57620011bf620010ff565b500190565b600181811c90821680620011d957607f821691505b602082108103620011fa57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051614e866200141460003960008181610624015261402a0152600081816105940152614109015260008181610948015261417001526000818161053301528181613f8b01528181614009015261409701526000818161047c0152818161406801526141da01526000818161072d015281816125db0152818161260a0152613ed90152600081816106540152818161131601528181612ba10152818161313c0152818161322d0152818161333201528181613b0a015281816142880152818161438001526143f9015260008181610706015281816112dd01528181612b6b01528181613201015281816132f801528181613ade015261434d01526000613e9c01526000818161262b01528181613e650152613f4d015260008181613fb50152613fe8015260008181611e3f01528181613c0f01528181613c3e0152613cb3015260008181610a9b01528181611dd001528181611e6901528181611ed30152818161204c0152818161266001528181612f5101528181612f8f015281816136ea0152818161374501528181613b6301528181613cdd0152613dbd01526000818161098801528181610d3b01528181610e6c01528181611b4401528181611bd901528181612e000152818161316b015281816142b701526144280152614e866000f3fe608060405234801561001057600080fd5b50600436106104725760003560e01c80638183723011610250578063b9e57b8011610150578063dd8ce4d6116100c8578063ed24911d11610097578063f7c618c11161007c578063f7c618c114610a96578063fa461e3314610abd578063fdb5a03e14610ad057600080fd5b8063ed24911d14610a7b578063f2fde38b14610a8357600080fd5b8063dd8ce4d614610a2f578063e21ac82514610a42578063e75ab04514610a55578063eab89a5a14610a6857600080fd5b8063cff1b6ef1161011f578063d505accf11610104578063d505accf146109d0578063da09c72c146109e3578063dd62ed3e146109f657600080fd5b8063cff1b6ef146109aa578063d0ed26ae146109bd57600080fd5b8063b9e57b801461096a578063bd079f5514610972578063c4b24a461461097b578063c89039c51461098357600080fd5b80639e4e7318116101e3578063a9059cbb116101b2578063b52a321f11610197578063b52a321f14610923578063b6b55f2514610930578063b8eafcad1461094357600080fd5b8063a9059cbb146108fd578063ac0d31ff1461091057600080fd5b80639e4e73181461084e578063a4d5e67c14610875578063a5534e7114610888578063a8ae2b7c146108ea57600080fd5b80638da5cb5b1161021f5780638da5cb5b1461080f5780639291d5631461082057806395d89b411461083357806399729ec11461083b57600080fd5b806381837230146107cd5780638980f11f146107e05780638aff733d146107f35780638b73e606146107fc57600080fd5b80633bdc6e72116103765780635eaec0e4116102ee578063789139bc116102bd5780637ae26773116102a25780637ae26773146107925780637d882097146107a55780637ecebe00146107ad57600080fd5b8063789139bc14610780578063790854251461078957600080fd5b80635eaec0e4146107015780636c83b3d71461072857806370a082311461074f578063715018a61461077857600080fd5b80634a970be7116103455780634e77ace51161032a5780634e77ace5146106d25780634ebb7916146106e55780635ea682ea146106f857600080fd5b80634a970be7146106ac5780634bebd1e7146106bf57600080fd5b80633bdc6e72146106465780634005760a1461064f57806340b47e1a14610676578063483c2ef01461068957600080fd5b806320606b70116104095780632e1a7d4d116103d857806330adf81f116103bd57806330adf81f146105de578063313ce56714610605578063395b0f911461061f57600080fd5b80632e1a7d4d146105b65780632f4f21e2146105cb57600080fd5b806320606b701461055557806323b872dd1461057c57806324203b431461058f578063247d284b1461051257600080fd5b80630f23475d116104455780630f23475d1461050a578063110560351461051257806318160ddd146105255780631b9b393c1461052e57600080fd5b806306f738d51461047757806306fdde03146104bb57806307677111146104d0578063095ea7b3146104e7575b600080fd5b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6104c3610ad8565b6040516104b2919061481d565b6104d9600d5481565b6040519081526020016104b2565b6104fa6104f5366004614845565b610b66565b60405190151581526020016104b2565b6104d9610b7c565b6104d9610520366004614871565b610ba7565b6104d960025481565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6104d97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6104fa61058a36600461488a565b610bb8565b6104d97f000000000000000000000000000000000000000000000000000000000000000081565b6105c96105c4366004614871565b610c81565b005b6105c96105d9366004614845565b610da8565b6104d97f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61060d601281565b60405160ff90911681526020016104b2565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6104d960075481565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6105c96106843660046148cb565b610db6565b6104fa610697366004614904565b60086020526000908152604090205460ff1681565b6105c96106ba366004614937565b610e13565b6105c96106cd366004614904565b610ee1565b6105c96106e036600461498c565b610ffe565b6105c96106f3366004614871565b6110a5565b6104d9600f5481565b6104d97f000000000000000000000000000000000000000000000000000000000000000081565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6104d961075d366004614904565b6001600160a01b031660009081526004602052604090205490565b6105c961115f565b6104d9600b5481565b6104d960125481565b6105c96107a03660046148cb565b6111f1565b6104d96112b5565b6104d96107bb366004614904565b60056020526000908152604090205481565b6105c96107db366004614871565b611387565b6105c96107ee366004614845565b611410565b6104d9600e5481565b6105c961080a366004614904565b6114c0565b6006546001600160a01b031661049e565b6105c961082e366004614904565b61167c565b6104c3611736565b6105c9610849366004614871565b611743565b6104d97fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681565b6105c9610883366004614904565b6117e8565b6108c4610896366004614904565b6010602052600090815260409020805460018201546002909201546001600160a01b03918216929091169083565b604080516001600160a01b039485168152939092166020840152908201526060016104b2565b6105c96108f8366004614871565b611a32565b6104fa61090b366004614845565b611ad7565b6105c961091e3660046149a9565b611ae4565b600c546104fa9060ff1681565b6105c961093e366004614871565b611d56565b6104d97f000000000000000000000000000000000000000000000000000000000000000081565b6104d9611d63565b6104d9600a5481565b6104d9611da2565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6105c96109b8366004614871565b6120db565b6105c96109cb36600461488a565b61216f565b6105c96109de3660046149ce565b6121d0565b60095461049e906001600160a01b031681565b6104d9610a043660046148cb565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6104d9610a3d366004614871565b6122e3565b6105c9610a50366004614871565b612323565b61049e610a63366004614871565b6123ac565b6104d9610a76366004614871565b6123d6565b6104d9612410565b6105c9610a91366004614904565b6124b0565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6105c9610acb366004614a3c565b6125d0565b6105c9612687565b60008054610ae590614abc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1190614abc565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b505050505081565b6000610b733384846128f7565b50600192915050565b600080610b876112b5565b90506000610b9482612a05565b9050610ba08183614b0c565b9250505090565b6000610bb282612a05565b92915050565b6001600160a01b038316600081815260036020908152604080832033808552925282205491929091908214801590610bf257506000198114155b15610c68576000610c038583614b0c565b6001600160a01b038881166000818152600360209081526040808320948916808452948252918290208590559051848152939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b610c73868686612a1f565b6001925050505b9392505050565b6000610c8c826123d6565b905060008111610d095760405162461bcd60e51b815260206004820152603060248201527f5661726961626c655265776172647353747261746567793a3a5769746864726160448201527f7720616d6f756e7420746f6f206c6f770000000000000000000000000000000060648201526084015b60405180910390fd5b6000610d1482612b43565b90506000610d2183612a05565b9050610d6233610d318385614b0c565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612c0b565b610d6c3385612c8b565b60405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a250505050565b610db28282612d1f565b5050565b6009546001600160a01b03163314610e075760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b610db28282601e612f4f565b6040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d505accf9060e401600060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b50505050610eda3386612d1f565b5050505050565b6006546001600160a01b03163314610f295760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6001600160a01b03811660009081526008602052604090205460ff1615610f925760405162461bcd60e51b815260206004820152601c60248201527f5065726d697373696f6e65643a3a616c6c6f774465706f7369746f72000000006044820152606401610d00565b6001600160a01b0381166000908152600860205260409020805460ff19166001908117909155600754610fc491614b23565b6007556040516001600160a01b038216907fc0a1035c16faf8d1304056d92c00edf028f87e62b8235a938f00af9e3c0312c590600090a250565b6006546001600160a01b031633146110465760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600c5481151560ff90911615150361105d57600080fd5b600c805460ff19168215159081179091556040519081527f7b014ed3854e7f5cb0218d58b3c6ae7d53a68bb0af2f67bfb029ea42c38a7e85906020015b60405180910390a150565b6006546001600160a01b031633146110ed5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600081116110fa57600080fd5b604051339082156108fc029083906000818181858888f19350505050158015611127573d6000803e3d6000fd5b506040805160008152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910161109a565b6006546001600160a01b031633146111a75760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6006546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600680546001600160a01b0319169055565b6006546001600160a01b031633146112395760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b60405163095ea7b360e01b81526001600160a01b0382811660048301526000602483015283169063095ea7b3906044016020604051808303816000875af1158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac9190614b3b565b610db257600080fd5b6040517f93f1a40b0000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600482015230602482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393f1a40b906044016040805180830381865afa15801561135c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113809190614b58565b5092915050565b6006546001600160a01b031633146113cf5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600a5460408051918252602082018390527f481f79ac3a523b6d6db3c5a720e190e986d1cc1b41adcdf50f9caef849901100910160405180910390a1600a55565b6006546001600160a01b031633146114585760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6000811161146557600080fd5b6114796001600160a01b0383163383612c0b565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2891015b60405180910390a15050565b6006546001600160a01b031633146115085760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6000600754116115805760405162461bcd60e51b815260206004820152603460248201527f5065726d697373696f6e65643a3a72656d6f76654465706f7369746f722c206e60448201527f6f20616c6c6f776564206465706f7369746f72730000000000000000000000006064820152608401610d00565b6001600160a01b03811660009081526008602052604090205460ff1615156001146116135760405162461bcd60e51b815260206004820152602a60248201527f5065726d697373696f6e65643a3a72656d6f76654465706f7369746f722c206e60448201527f6f7420616c6c6f776564000000000000000000000000000000000000000000006064820152608401610d00565b6001600160a01b0381166000908152600860205260409020805460ff1916905560075461164290600190614b0c565b6007556040516001600160a01b038216907f0e86f6608b536e5339a25b65ff531f5ea91e1313d056ecd4752b35cbd16137d490600090a250565b6009546001600160a01b031633146116cd5760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b600954604080516001600160a01b03928316815291831660208301527fa8e91499ed37682f43cffb045fcc7d379a91e8c9a14e6321877ee34dee564c00910160405180910390a1600980546001600160a01b0319166001600160a01b0392909216919091179055565b60018054610ae590614abc565b6006546001600160a01b0316331461178b5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b612710600e548261179c9190614b23565b11156117a757600080fd5b600f5460408051918252602082018390527f2a42303d002f0ba6cfe8259c91d4684443fb0b3de286ba74991175d651726131910160405180910390a1600f55565b6009546001600160a01b031633146118395760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b6001600160a01b038116600090815260106020526040812080546001600160a01b031990811682556001820180549091169055600201819055805b601154811015611940576011818154811061189157611891614b7c565b6000918252602090912001546001600160a01b039081169084160361192e5760118054600193506118c3908490614b0c565b815481106118d3576118d3614b7c565b600091825260209091200154601180546001600160a01b0390921691839081106118ff576118ff614b7c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061193881614b92565b915050611874565b50806119b45760405162461bcd60e51b815260206004820152603460248201527f5661726961626c655265776172647353747261746567793a3a5265776172642060448201527f746f2064656c657465206e6f7420666f756e64210000000000000000000000006064820152608401610d00565b60118054806119c5576119c5614bab565b600082815260209020810160001990810180546001600160a01b03191690550190556012546119f690600190614b0c565b6012556040516001600160a01b03831681527f963b7c735475147a62c589c2d7cb8ec4b0a6b7af4f97373d79ebfa42ab8aa7dc906020016114b4565b6006546001600160a01b03163314611a7a5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b612710600f5482611a8b9190614b23565b1115611a9657600080fd5b600e5460408051918252602082018390527fe7f97d51d307dc44045597c9978bec0f842e6bb40d19b9444084cfa30d9ed4f2910160405180910390a1600e55565b6000610b73338484612a1f565b6006546001600160a01b03163314611b2c5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb79190614bc1565b9050611bc1613125565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c9190614bc1565b905083611c598383614b0c565b1015611cf35760405162461bcd60e51b815260206004820152604d60248201527f5661726961626c655265776172647353747261746567793a3a456d657267656e60448201527f6379207769746864726177206d696e696d756d2072657475726e20616d6f756e60648201527f74206e6f74207265616368656400000000000000000000000000000000000000608482015260a401610d00565b7fc7606d21ac05cd309191543e409f0845c016120563783d70e4f41419dc0ef234611d1c6112b5565b6002546040805192835260208301919091520160405180910390a1600c5460ff161515600103611d5057611d506000610ffe565b50505050565b611d603382612d1f565b50565b600080611d6e611da2565b9050600a548110611d9a57612710600e5482611d8a9190614bda565b611d949190614bf9565b91505090565b600091505090565b600080611dad61328e565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b9190614bc1565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603611ea357611ea04782614b23565b90505b60005b8251811015611380576000838281518110611ec357611ec3614b7c565b60200260200101516000015190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031603611f3a57838281518110611f1c57611f1c614b7c565b60200260200101516020015183611f339190614b23565b92506120c8565b6001600160a01b038116156120c8576040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb49190614bc1565b90506000858481518110611fca57611fca614b7c565b60200260200101516020015182611fe19190614b23565b9050600060106000888781518110611ffb57611ffb614b7c565b602090810291909101810151516001600160a01b0390811683529082019290925260400160002060010154169050811580159061204057506001600160a01b03811615155b156120c4576120b782857f000000000000000000000000000000000000000000000000000000000000000084601060008d8c8151811061208257612082614b7c565b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020600201546133f5565b6120c19087614b23565b95505b5050505b50806120d381614b92565b915050611ea6565b6006546001600160a01b031633146121235760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b801561212e57600080fd5b600d5460408051918252602082018390527f3cc372f330f95ac9540626dc8a25f5bf21ba607215a5d58304cb804d446f104a910160405180910390a1600d55565b6009546001600160a01b031633146121c05760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b6121cb838383612f4f565b505050565b428410156122205760405162461bcd60e51b815260206004820152600f60248201527f7065726d69743a3a6578706972656400000000000000000000000000000000006044820152606401610d00565b6001600160a01b038716600090815260056020526040812080547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918a918a918a91908661226d83614b92565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506122ce88828686866134c3565b6122d98888886128f7565b5050505050505050565b6000600254600014806122fb57506122f96112b5565b155b15612304575090565b61230c6112b5565b6002546123199084614bda565b610bb29190614bf9565b6006546001600160a01b0316331461236b5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600b5460408051918252602082018390527fa5dae50539d56dfe1fb5273d883b0c39bc76750a25d036fc5fbd09ad8fd5f57f910160405180910390a1600b55565b601181815481106123bc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000600254600014806123ee57506123ec6112b5565b155b156123fb57506000919050565b6002546124066112b5565b6123199084614bda565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60001b60006040516124459190614c1b565b6040519081900390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6006546001600160a01b031633146124f85760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6001600160a01b0381166125745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610d00565b6006546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600680546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461260557600080fd5b611d507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006126545784612656565b855b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612c0b565b3233146126d65760405162461bcd60e51b815260206004820152601460248201527f59616b53747261746567793a3a6f6e6c79454f410000000000000000000000006044820152606401610d00565b6126e06000613623565b565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127469190614cb6565b6001600160a01b0316836001600160a01b031614806127d75750836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561279e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c29190614cb6565b6001600160a01b0316836001600160a01b0316145b80156128d15750836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561281c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128409190614cb6565b6001600160a01b0316826001600160a01b031614806128d15750836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128bc9190614cb6565b6001600160a01b0316826001600160a01b0316145b80156128ef5750816001600160a01b0316836001600160a01b031614155b949350505050565b6001600160a01b03831661294d5760405162461bcd60e51b815260206004820152601c60248201527f5f617070726f76653a3a6f776e6572207a65726f2061646472657373000000006044820152606401610d00565b6001600160a01b0382166129a35760405162461bcd60e51b815260206004820152601e60248201527f5f617070726f76653a3a7370656e646572207a65726f206164647265737300006044820152606401610d00565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600080612710612a158285614bda565b610c7a9190614bf9565b6001600160a01b038216612a9b5760405162461bcd60e51b815260206004820152603460248201527f5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657260448201527f20746f20746865207a65726f20616464726573730000000000000000000000006064820152608401610d00565b6001600160a01b038316600090815260046020526040902054612abf908290614b0c565b6001600160a01b038085166000908152600460205260408082209390935590841681522054612aef908290614b23565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906129f89085815260200190565b6040517f0ad58d2f0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290523060448201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630ad58d2f90606401600060405180830381600087803b158015612bed57600080fd5b505af1158015612c01573d6000803e3d6000fd5b5093949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526121cb9084906137f0565b6001600160a01b038216600090815260046020526040902054612caf908290614b0c565b6001600160a01b038316600090815260046020526040902055600254612cd6908290614b0c565b6002556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b600c5460ff161515600114612d9c5760405162461bcd60e51b815260206004820152602a60248201527f5661726961626c655265776172647353747261746567793a3a4465706f73697460448201527f732064697361626c6564000000000000000000000000000000000000000000006064820152608401610d00565b600b548015612dc5576000612daf611da2565b905081811115612dc357612dc36001613623565b505b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015612e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e759190614b3b565b612ee75760405162461bcd60e51b815260206004820152603660248201527f5661726961626c655265776172647353747261746567793a3a4465706f73697460448201527f20746f6b656e207472616e73666572206661696c6564000000000000000000006064820152608401610d00565b6000612ef283612a05565b9050612f0a84612f05610a3d8487614b0c565b6138d5565b612f1483826139ab565b836001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c84604051610d9a91815260200190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161461302757612fb382847f00000000000000000000000000000000000000000000000000000000000000006126e2565b613027576040805162461bcd60e51b81526020600482015260248101919091527f5661726961626c655265776172647353747261746567793a3a5377617020706160448201527f697220646f6573206e6f7420636f6e7461696e2072657761726420746f6b656e6064820152608401610d00565b604080516060810182526001600160a01b03808616808352858216602080850191825284860187815260008481526010909252958120945185549085166001600160a01b03199182161786559151600180870180549290961691841691909117909455945160029094019390935560118054808401825594527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68909301805490921690921790556012546130da91614b23565b601255604080516001600160a01b038086168252841660208201527f916e172c080569186aa7ea048268267257cf7cc49505908863f747bca8620f80910160405180910390a1505050565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156131b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131d89190614b3b565b506040517f2f940c700000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f940c70906044015b600060405180830381600087803b15801561327a57600080fd5b505af1158015611d50573d6000803e3d6000fd5b60408051600180825281830190925260609160009190816020015b60408051808201909152600080825260208201528152602001906001900390816132a9579050506040517f1491f6fe0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631491f6fe90604401602060405180830381865afa158015613379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339d9190614bc1565b9050604051806040016040528073080f6aed32fc474dd5717105dba5ea57268f46eb6001600160a01b0316815260200182815250826000815181106133e4576133e4614b7c565b602090810291909101015250919050565b6000806134028686613a2b565b509050600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061346a9190614d07565b5091509150876001600160a01b0316836001600160a01b03161461348a57905b6134b689836dffffffffffffffffffffffffffff16836dffffffffffffffffffffffffffff1688613a5c565b9998505050505050505050565b60006134cd612410565b6040517f1901000000000000000000000000000000000000000000000000000000000000602082015260228101919091526042810186905260620160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015613573573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906135a95750866001600160a01b0316816001600160a01b0316145b61361a5760405162461bcd60e51b8152602060048201526024808201527f417263683a3a76616c69646174655369673a20696e76616c6964207369676e6160448201527f74757265000000000000000000000000000000000000000000000000000000006064820152608401610d00565b50505050505050565b61362b613ab6565b6000613635613b41565b9050816136b457600a548110156136b45760405162461bcd60e51b815260206004820152603060248201527f5661726961626c655265776172647353747261746567793a3a5265696e76657360448201527f7420616d6f756e7420746f6f206c6f77000000000000000000000000000000006064820152608401610d00565b6000612710600f54836136c79190614bda565b6136d19190614bf9565b9050801561371357600954613713906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683612c0b565b6000612710600e54846137269190614bda565b6137309190614bf9565b9050801561376c5761376c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612c0b565b600061378b8261377c8587614b0c565b6137869190614b0c565b613e37565b9050600061379882612a05565b90506137a482826139ab565b7fc7606d21ac05cd309191543e409f0845c016120563783d70e4f41419dc0ef2346137cd6112b5565b6002546040805192835260208301919091520160405180910390a1505050505050565b6000613845826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166142629092919063ffffffff16565b8051909150156121cb57808060200190518101906138639190614b3b565b6121cb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610d00565b600081116139255760405162461bcd60e51b815260206004820152601260248201527f5f6d696e743a3a7a65726f2073686172657300000000000000000000000000006044820152606401610d00565b806002546139339190614b23565b6002556001600160a01b03821660009081526004602052604090205461395a908290614b23565b6001600160a01b0383166000818152600460205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612d139085815260200190565b60008211613a215760405162461bcd60e51b815260206004820152602d60248201527f5661726961626c655265776172647353747261746567793a3a5374616b65206160448201527f6d6f756e7420746f6f206c6f77000000000000000000000000000000000000006064820152608401610d00565b610db28282614271565b600080826001600160a01b0316846001600160a01b031610613a4e578284613a51565b83835b915091509250929050565b600080613a6b83612710614b0c565b613a759087614bda565b90506000613a838583614bda565b9050600082613a9461271089614bda565b613a9e9190614b23565b9050613aaa8183614bf9565b98975050505050505050565b6040517f18fccc760000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906318fccc7690604401613260565b6040516370a0823160e01b815230600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015613baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bce9190614bc1565b60115490915060005b81811015613e2f57600060118281548110613bf457613bf4614b7c565b6000918252602090912001546001600160a01b0390811691507f0000000000000000000000000000000000000000000000000000000000000000168103613d1f57478015613cb1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613c9757600080fd5b505af1158015613cab573d6000803e3d6000fd5b50505050505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603613d1d57613d148186614b23565b94505050613e1d565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015613d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d8a9190614bc1565b90508015613e1a576001600160a01b03808316600090815260106020526040902060010154168015613e1857613e0b82847f00000000000000000000000000000000000000000000000000000000000000008460106000896001600160a01b03166001600160a01b0316815260200190815260200160002060020154614497565b613e159087614b23565b95505b505b50505b80613e2781614b92565b915050613bd7565b509092915050565b6040517f128acb080000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000015156024820152604481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116606483015260a06084830152600060a4830181905291829182917f00000000000000000000000000000000000000000000000000000000000000009091169063128acb089060c40160408051808303816000875af1158015613f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f479190614b58565b915091507f0000000000000000000000000000000000000000000000000000000000000000613f7e57613f7982614d57565b613f87565b613f8781614d57565b93507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146140515761404e847f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000614634565b93505b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156140e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141049190614b3b565b5060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff81111561414057614140614cd3565b604051908082528060200260200182016040528015614169578160200160208202803683370190505b50905084817f00000000000000000000000000000000000000000000000000000000000000008151811061419f5761419f614b7c565b60209081029190910101526040517f4d49e87d0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634d49e87d9061421690849060009060001990600401614d8f565b6020604051808303816000875af1158015614235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142599190614bc1565b95945050505050565b60606128ef8484600085614644565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015614300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143249190614b3b565b506040517f8dbdbe6d0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638dbdbe6d90606401600060405180830381600087803b1580156143cc57600080fd5b505af11580156143e0573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f000000000000000000000000000000000000000000000000000000000000000016925063095ea7b391506044016020604051808303816000875af1158015614473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121cb9190614b3b565b6000806144a48686613a2b565b509050600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156144e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061450c9190614d07565b5091509150876001600160a01b0316836001600160a01b03161461452c57905b60008061455b8b856dffffffffffffffffffffffffffff16856dffffffffffffffffffffffffffff168a613a5c565b9050896001600160a01b0316856001600160a01b03161461457857905b61458c6001600160a01b038b16898d612c0b565b604080516000815260208101918290527f022c0d9f000000000000000000000000000000000000000000000000000000009091526001600160a01b0389169063022c0d9f906145e49085908590309060248101614ddc565b600060405180830381600087803b1580156145fe57600080fd5b505af1158015614612573d6000803e3d6000fd5b505050508181116146235781614625565b805b9b9a5050505050505050505050565b600061425985858585601e614497565b6060824710156146bc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610d00565b6001600160a01b0385163b6147135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d00565b600080866001600160a01b0316858760405161472f9190614e14565b60006040518083038185875af1925050503d806000811461476c576040519150601f19603f3d011682016040523d82523d6000602084013e614771565b606091505b509150915061478182828661478c565b979650505050505050565b6060831561479b575081610c7a565b8251156147ab5782518084602001fd5b8160405162461bcd60e51b8152600401610d00919061481d565b60005b838110156147e05781810151838201526020016147c8565b83811115611d505750506000910152565b600081518084526148098160208601602086016147c5565b601f01601f19169290920160200192915050565b602081526000610c7a60208301846147f1565b6001600160a01b0381168114611d6057600080fd5b6000806040838503121561485857600080fd5b823561486381614830565b946020939093013593505050565b60006020828403121561488357600080fd5b5035919050565b60008060006060848603121561489f57600080fd5b83356148aa81614830565b925060208401356148ba81614830565b929592945050506040919091013590565b600080604083850312156148de57600080fd5b82356148e981614830565b915060208301356148f981614830565b809150509250929050565b60006020828403121561491657600080fd5b8135610c7a81614830565b803560ff8116811461493257600080fd5b919050565b600080600080600060a0868803121561494f57600080fd5b853594506020860135935061496660408701614921565b94979396509394606081013594506080013592915050565b8015158114611d6057600080fd5b60006020828403121561499e57600080fd5b8135610c7a8161497e565b600080604083850312156149bc57600080fd5b8235915060208301356148f98161497e565b600080600080600080600060e0888a0312156149e957600080fd5b87356149f481614830565b96506020880135614a0481614830565b95506040880135945060608801359350614a2060808901614921565b925060a0880135915060c0880135905092959891949750929550565b60008060008060608587031215614a5257600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115614a7857600080fd5b818701915087601f830112614a8c57600080fd5b813581811115614a9b57600080fd5b886020828501011115614aad57600080fd5b95989497505060200194505050565b600181811c90821680614ad057607f821691505b602082108103614af057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015614b1e57614b1e614af6565b500390565b60008219821115614b3657614b36614af6565b500190565b600060208284031215614b4d57600080fd5b8151610c7a8161497e565b60008060408385031215614b6b57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b600060018201614ba457614ba4614af6565b5060010190565b634e487b7160e01b600052603160045260246000fd5b600060208284031215614bd357600080fd5b5051919050565b6000816000190483118215151615614bf457614bf4614af6565b500290565b600082614c1657634e487b7160e01b600052601260045260246000fd5b500490565b600080835481600182811c915080831680614c3757607f831692505b60208084108203614c5657634e487b7160e01b86526022600452602486fd5b818015614c6a5760018114614c7b57614ca8565b60ff19861689528489019650614ca8565b60008a81526020902060005b86811015614ca05781548b820152908501908301614c87565b505084890196505b509498975050505050505050565b600060208284031215614cc857600080fd5b8151610c7a81614830565b634e487b7160e01b600052604160045260246000fd5b80516dffffffffffffffffffffffffffff8116811461493257600080fd5b600080600060608486031215614d1c57600080fd5b614d2584614ce9565b9250614d3360208501614ce9565b9150604084015163ffffffff81168114614d4c57600080fd5b809150509250925092565b60007f80000000000000000000000000000000000000000000000000000000000000008203614d8857614d88614af6565b5060000390565b606080825284519082018190526000906020906080840190828801845b82811015614dc857815184529284019290840190600101614dac565b505050908301949094525060400152919050565b8481528360208201526001600160a01b0383166040820152608060608201526000614e0a60808301846147f1565b9695505050505050565b60008251614e268184602087016147c5565b919091019291505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212200042900a715d50697e6555659b39402fa4adbe783d5ded32ecb0a127538a667364736f6c634300080d00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106104725760003560e01c80638183723011610250578063b9e57b8011610150578063dd8ce4d6116100c8578063ed24911d11610097578063f7c618c11161007c578063f7c618c114610a96578063fa461e3314610abd578063fdb5a03e14610ad057600080fd5b8063ed24911d14610a7b578063f2fde38b14610a8357600080fd5b8063dd8ce4d614610a2f578063e21ac82514610a42578063e75ab04514610a55578063eab89a5a14610a6857600080fd5b8063cff1b6ef1161011f578063d505accf11610104578063d505accf146109d0578063da09c72c146109e3578063dd62ed3e146109f657600080fd5b8063cff1b6ef146109aa578063d0ed26ae146109bd57600080fd5b8063b9e57b801461096a578063bd079f5514610972578063c4b24a461461097b578063c89039c51461098357600080fd5b80639e4e7318116101e3578063a9059cbb116101b2578063b52a321f11610197578063b52a321f14610923578063b6b55f2514610930578063b8eafcad1461094357600080fd5b8063a9059cbb146108fd578063ac0d31ff1461091057600080fd5b80639e4e73181461084e578063a4d5e67c14610875578063a5534e7114610888578063a8ae2b7c146108ea57600080fd5b80638da5cb5b1161021f5780638da5cb5b1461080f5780639291d5631461082057806395d89b411461083357806399729ec11461083b57600080fd5b806381837230146107cd5780638980f11f146107e05780638aff733d146107f35780638b73e606146107fc57600080fd5b80633bdc6e72116103765780635eaec0e4116102ee578063789139bc116102bd5780637ae26773116102a25780637ae26773146107925780637d882097146107a55780637ecebe00146107ad57600080fd5b8063789139bc14610780578063790854251461078957600080fd5b80635eaec0e4146107015780636c83b3d71461072857806370a082311461074f578063715018a61461077857600080fd5b80634a970be7116103455780634e77ace51161032a5780634e77ace5146106d25780634ebb7916146106e55780635ea682ea146106f857600080fd5b80634a970be7146106ac5780634bebd1e7146106bf57600080fd5b80633bdc6e72146106465780634005760a1461064f57806340b47e1a14610676578063483c2ef01461068957600080fd5b806320606b70116104095780632e1a7d4d116103d857806330adf81f116103bd57806330adf81f146105de578063313ce56714610605578063395b0f911461061f57600080fd5b80632e1a7d4d146105b65780632f4f21e2146105cb57600080fd5b806320606b701461055557806323b872dd1461057c57806324203b431461058f578063247d284b1461051257600080fd5b80630f23475d116104455780630f23475d1461050a578063110560351461051257806318160ddd146105255780631b9b393c1461052e57600080fd5b806306f738d51461047757806306fdde03146104bb57806307677111146104d0578063095ea7b3146104e7575b600080fd5b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6104c3610ad8565b6040516104b2919061481d565b6104d9600d5481565b6040519081526020016104b2565b6104fa6104f5366004614845565b610b66565b60405190151581526020016104b2565b6104d9610b7c565b6104d9610520366004614871565b610ba7565b6104d960025481565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6104d97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6104fa61058a36600461488a565b610bb8565b6104d97f000000000000000000000000000000000000000000000000000000000000000081565b6105c96105c4366004614871565b610c81565b005b6105c96105d9366004614845565b610da8565b6104d97f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61060d601281565b60405160ff90911681526020016104b2565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6104d960075481565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6105c96106843660046148cb565b610db6565b6104fa610697366004614904565b60086020526000908152604090205460ff1681565b6105c96106ba366004614937565b610e13565b6105c96106cd366004614904565b610ee1565b6105c96106e036600461498c565b610ffe565b6105c96106f3366004614871565b6110a5565b6104d9600f5481565b6104d97f000000000000000000000000000000000000000000000000000000000000000081565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6104d961075d366004614904565b6001600160a01b031660009081526004602052604090205490565b6105c961115f565b6104d9600b5481565b6104d960125481565b6105c96107a03660046148cb565b6111f1565b6104d96112b5565b6104d96107bb366004614904565b60056020526000908152604090205481565b6105c96107db366004614871565b611387565b6105c96107ee366004614845565b611410565b6104d9600e5481565b6105c961080a366004614904565b6114c0565b6006546001600160a01b031661049e565b6105c961082e366004614904565b61167c565b6104c3611736565b6105c9610849366004614871565b611743565b6104d97fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681565b6105c9610883366004614904565b6117e8565b6108c4610896366004614904565b6010602052600090815260409020805460018201546002909201546001600160a01b03918216929091169083565b604080516001600160a01b039485168152939092166020840152908201526060016104b2565b6105c96108f8366004614871565b611a32565b6104fa61090b366004614845565b611ad7565b6105c961091e3660046149a9565b611ae4565b600c546104fa9060ff1681565b6105c961093e366004614871565b611d56565b6104d97f000000000000000000000000000000000000000000000000000000000000000081565b6104d9611d63565b6104d9600a5481565b6104d9611da2565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6105c96109b8366004614871565b6120db565b6105c96109cb36600461488a565b61216f565b6105c96109de3660046149ce565b6121d0565b60095461049e906001600160a01b031681565b6104d9610a043660046148cb565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6104d9610a3d366004614871565b6122e3565b6105c9610a50366004614871565b612323565b61049e610a63366004614871565b6123ac565b6104d9610a76366004614871565b6123d6565b6104d9612410565b6105c9610a91366004614904565b6124b0565b61049e7f000000000000000000000000000000000000000000000000000000000000000081565b6105c9610acb366004614a3c565b6125d0565b6105c9612687565b60008054610ae590614abc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1190614abc565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b505050505081565b6000610b733384846128f7565b50600192915050565b600080610b876112b5565b90506000610b9482612a05565b9050610ba08183614b0c565b9250505090565b6000610bb282612a05565b92915050565b6001600160a01b038316600081815260036020908152604080832033808552925282205491929091908214801590610bf257506000198114155b15610c68576000610c038583614b0c565b6001600160a01b038881166000818152600360209081526040808320948916808452948252918290208590559051848152939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b610c73868686612a1f565b6001925050505b9392505050565b6000610c8c826123d6565b905060008111610d095760405162461bcd60e51b815260206004820152603060248201527f5661726961626c655265776172647353747261746567793a3a5769746864726160448201527f7720616d6f756e7420746f6f206c6f770000000000000000000000000000000060648201526084015b60405180910390fd5b6000610d1482612b43565b90506000610d2183612a05565b9050610d6233610d318385614b0c565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612c0b565b610d6c3385612c8b565b60405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a250505050565b610db28282612d1f565b5050565b6009546001600160a01b03163314610e075760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b610db28282601e612f4f565b6040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d505accf9060e401600060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b50505050610eda3386612d1f565b5050505050565b6006546001600160a01b03163314610f295760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6001600160a01b03811660009081526008602052604090205460ff1615610f925760405162461bcd60e51b815260206004820152601c60248201527f5065726d697373696f6e65643a3a616c6c6f774465706f7369746f72000000006044820152606401610d00565b6001600160a01b0381166000908152600860205260409020805460ff19166001908117909155600754610fc491614b23565b6007556040516001600160a01b038216907fc0a1035c16faf8d1304056d92c00edf028f87e62b8235a938f00af9e3c0312c590600090a250565b6006546001600160a01b031633146110465760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600c5481151560ff90911615150361105d57600080fd5b600c805460ff19168215159081179091556040519081527f7b014ed3854e7f5cb0218d58b3c6ae7d53a68bb0af2f67bfb029ea42c38a7e85906020015b60405180910390a150565b6006546001600160a01b031633146110ed5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600081116110fa57600080fd5b604051339082156108fc029083906000818181858888f19350505050158015611127573d6000803e3d6000fd5b506040805160008152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910161109a565b6006546001600160a01b031633146111a75760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6006546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600680546001600160a01b0319169055565b6006546001600160a01b031633146112395760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b60405163095ea7b360e01b81526001600160a01b0382811660048301526000602483015283169063095ea7b3906044016020604051808303816000875af1158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac9190614b3b565b610db257600080fd5b6040517f93f1a40b0000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600482015230602482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393f1a40b906044016040805180830381865afa15801561135c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113809190614b58565b5092915050565b6006546001600160a01b031633146113cf5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600a5460408051918252602082018390527f481f79ac3a523b6d6db3c5a720e190e986d1cc1b41adcdf50f9caef849901100910160405180910390a1600a55565b6006546001600160a01b031633146114585760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6000811161146557600080fd5b6114796001600160a01b0383163383612c0b565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2891015b60405180910390a15050565b6006546001600160a01b031633146115085760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6000600754116115805760405162461bcd60e51b815260206004820152603460248201527f5065726d697373696f6e65643a3a72656d6f76654465706f7369746f722c206e60448201527f6f20616c6c6f776564206465706f7369746f72730000000000000000000000006064820152608401610d00565b6001600160a01b03811660009081526008602052604090205460ff1615156001146116135760405162461bcd60e51b815260206004820152602a60248201527f5065726d697373696f6e65643a3a72656d6f76654465706f7369746f722c206e60448201527f6f7420616c6c6f776564000000000000000000000000000000000000000000006064820152608401610d00565b6001600160a01b0381166000908152600860205260409020805460ff1916905560075461164290600190614b0c565b6007556040516001600160a01b038216907f0e86f6608b536e5339a25b65ff531f5ea91e1313d056ecd4752b35cbd16137d490600090a250565b6009546001600160a01b031633146116cd5760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b600954604080516001600160a01b03928316815291831660208301527fa8e91499ed37682f43cffb045fcc7d379a91e8c9a14e6321877ee34dee564c00910160405180910390a1600980546001600160a01b0319166001600160a01b0392909216919091179055565b60018054610ae590614abc565b6006546001600160a01b0316331461178b5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b612710600e548261179c9190614b23565b11156117a757600080fd5b600f5460408051918252602082018390527f2a42303d002f0ba6cfe8259c91d4684443fb0b3de286ba74991175d651726131910160405180910390a1600f55565b6009546001600160a01b031633146118395760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b6001600160a01b038116600090815260106020526040812080546001600160a01b031990811682556001820180549091169055600201819055805b601154811015611940576011818154811061189157611891614b7c565b6000918252602090912001546001600160a01b039081169084160361192e5760118054600193506118c3908490614b0c565b815481106118d3576118d3614b7c565b600091825260209091200154601180546001600160a01b0390921691839081106118ff576118ff614b7c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061193881614b92565b915050611874565b50806119b45760405162461bcd60e51b815260206004820152603460248201527f5661726961626c655265776172647353747261746567793a3a5265776172642060448201527f746f2064656c657465206e6f7420666f756e64210000000000000000000000006064820152608401610d00565b60118054806119c5576119c5614bab565b600082815260209020810160001990810180546001600160a01b03191690550190556012546119f690600190614b0c565b6012556040516001600160a01b03831681527f963b7c735475147a62c589c2d7cb8ec4b0a6b7af4f97373d79ebfa42ab8aa7dc906020016114b4565b6006546001600160a01b03163314611a7a5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b612710600f5482611a8b9190614b23565b1115611a9657600080fd5b600e5460408051918252602082018390527fe7f97d51d307dc44045597c9978bec0f842e6bb40d19b9444084cfa30d9ed4f2910160405180910390a1600e55565b6000610b73338484612a1f565b6006546001600160a01b03163314611b2c5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb79190614bc1565b9050611bc1613125565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c9190614bc1565b905083611c598383614b0c565b1015611cf35760405162461bcd60e51b815260206004820152604d60248201527f5661726961626c655265776172647353747261746567793a3a456d657267656e60448201527f6379207769746864726177206d696e696d756d2072657475726e20616d6f756e60648201527f74206e6f74207265616368656400000000000000000000000000000000000000608482015260a401610d00565b7fc7606d21ac05cd309191543e409f0845c016120563783d70e4f41419dc0ef234611d1c6112b5565b6002546040805192835260208301919091520160405180910390a1600c5460ff161515600103611d5057611d506000610ffe565b50505050565b611d603382612d1f565b50565b600080611d6e611da2565b9050600a548110611d9a57612710600e5482611d8a9190614bda565b611d949190614bf9565b91505090565b600091505090565b600080611dad61328e565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b9190614bc1565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603611ea357611ea04782614b23565b90505b60005b8251811015611380576000838281518110611ec357611ec3614b7c565b60200260200101516000015190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031603611f3a57838281518110611f1c57611f1c614b7c565b60200260200101516020015183611f339190614b23565b92506120c8565b6001600160a01b038116156120c8576040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb49190614bc1565b90506000858481518110611fca57611fca614b7c565b60200260200101516020015182611fe19190614b23565b9050600060106000888781518110611ffb57611ffb614b7c565b602090810291909101810151516001600160a01b0390811683529082019290925260400160002060010154169050811580159061204057506001600160a01b03811615155b156120c4576120b782857f000000000000000000000000000000000000000000000000000000000000000084601060008d8c8151811061208257612082614b7c565b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020600201546133f5565b6120c19087614b23565b95505b5050505b50806120d381614b92565b915050611ea6565b6006546001600160a01b031633146121235760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b801561212e57600080fd5b600d5460408051918252602082018390527f3cc372f330f95ac9540626dc8a25f5bf21ba607215a5d58304cb804d446f104a910160405180910390a1600d55565b6009546001600160a01b031633146121c05760405162461bcd60e51b81526020600482015260146024820152732cb0b5a9ba3930ba32b3bc9d1d37b7363ca232bb60611b6044820152606401610d00565b6121cb838383612f4f565b505050565b428410156122205760405162461bcd60e51b815260206004820152600f60248201527f7065726d69743a3a6578706972656400000000000000000000000000000000006044820152606401610d00565b6001600160a01b038716600090815260056020526040812080547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918a918a918a91908661226d83614b92565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506122ce88828686866134c3565b6122d98888886128f7565b5050505050505050565b6000600254600014806122fb57506122f96112b5565b155b15612304575090565b61230c6112b5565b6002546123199084614bda565b610bb29190614bf9565b6006546001600160a01b0316331461236b5760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b600b5460408051918252602082018390527fa5dae50539d56dfe1fb5273d883b0c39bc76750a25d036fc5fbd09ad8fd5f57f910160405180910390a1600b55565b601181815481106123bc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000600254600014806123ee57506123ec6112b5565b155b156123fb57506000919050565b6002546124066112b5565b6123199084614bda565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60001b60006040516124459190614c1b565b6040519081900390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6006546001600160a01b031633146124f85760405162461bcd60e51b81526020600482018190526024820152600080516020614e318339815191526044820152606401610d00565b6001600160a01b0381166125745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610d00565b6006546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600680546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461260557600080fd5b611d507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006126545784612656565b855b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612c0b565b3233146126d65760405162461bcd60e51b815260206004820152601460248201527f59616b53747261746567793a3a6f6e6c79454f410000000000000000000000006044820152606401610d00565b6126e06000613623565b565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127469190614cb6565b6001600160a01b0316836001600160a01b031614806127d75750836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561279e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c29190614cb6565b6001600160a01b0316836001600160a01b0316145b80156128d15750836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561281c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128409190614cb6565b6001600160a01b0316826001600160a01b031614806128d15750836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128bc9190614cb6565b6001600160a01b0316826001600160a01b0316145b80156128ef5750816001600160a01b0316836001600160a01b031614155b949350505050565b6001600160a01b03831661294d5760405162461bcd60e51b815260206004820152601c60248201527f5f617070726f76653a3a6f776e6572207a65726f2061646472657373000000006044820152606401610d00565b6001600160a01b0382166129a35760405162461bcd60e51b815260206004820152601e60248201527f5f617070726f76653a3a7370656e646572207a65726f206164647265737300006044820152606401610d00565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600080612710612a158285614bda565b610c7a9190614bf9565b6001600160a01b038216612a9b5760405162461bcd60e51b815260206004820152603460248201527f5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657260448201527f20746f20746865207a65726f20616464726573730000000000000000000000006064820152608401610d00565b6001600160a01b038316600090815260046020526040902054612abf908290614b0c565b6001600160a01b038085166000908152600460205260408082209390935590841681522054612aef908290614b23565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906129f89085815260200190565b6040517f0ad58d2f0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290523060448201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630ad58d2f90606401600060405180830381600087803b158015612bed57600080fd5b505af1158015612c01573d6000803e3d6000fd5b5093949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526121cb9084906137f0565b6001600160a01b038216600090815260046020526040902054612caf908290614b0c565b6001600160a01b038316600090815260046020526040902055600254612cd6908290614b0c565b6002556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b600c5460ff161515600114612d9c5760405162461bcd60e51b815260206004820152602a60248201527f5661726961626c655265776172647353747261746567793a3a4465706f73697460448201527f732064697361626c6564000000000000000000000000000000000000000000006064820152608401610d00565b600b548015612dc5576000612daf611da2565b905081811115612dc357612dc36001613623565b505b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015612e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e759190614b3b565b612ee75760405162461bcd60e51b815260206004820152603660248201527f5661726961626c655265776172647353747261746567793a3a4465706f73697460448201527f20746f6b656e207472616e73666572206661696c6564000000000000000000006064820152608401610d00565b6000612ef283612a05565b9050612f0a84612f05610a3d8487614b0c565b6138d5565b612f1483826139ab565b836001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c84604051610d9a91815260200190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161461302757612fb382847f00000000000000000000000000000000000000000000000000000000000000006126e2565b613027576040805162461bcd60e51b81526020600482015260248101919091527f5661726961626c655265776172647353747261746567793a3a5377617020706160448201527f697220646f6573206e6f7420636f6e7461696e2072657761726420746f6b656e6064820152608401610d00565b604080516060810182526001600160a01b03808616808352858216602080850191825284860187815260008481526010909252958120945185549085166001600160a01b03199182161786559151600180870180549290961691841691909117909455945160029094019390935560118054808401825594527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68909301805490921690921790556012546130da91614b23565b601255604080516001600160a01b038086168252841660208201527f916e172c080569186aa7ea048268267257cf7cc49505908863f747bca8620f80910160405180910390a1505050565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156131b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131d89190614b3b565b506040517f2f940c700000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632f940c70906044015b600060405180830381600087803b15801561327a57600080fd5b505af1158015611d50573d6000803e3d6000fd5b60408051600180825281830190925260609160009190816020015b60408051808201909152600080825260208201528152602001906001900390816132a9579050506040517f1491f6fe0000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631491f6fe90604401602060405180830381865afa158015613379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339d9190614bc1565b9050604051806040016040528073080f6aed32fc474dd5717105dba5ea57268f46eb6001600160a01b0316815260200182815250826000815181106133e4576133e4614b7c565b602090810291909101015250919050565b6000806134028686613a2b565b509050600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061346a9190614d07565b5091509150876001600160a01b0316836001600160a01b03161461348a57905b6134b689836dffffffffffffffffffffffffffff16836dffffffffffffffffffffffffffff1688613a5c565b9998505050505050505050565b60006134cd612410565b6040517f1901000000000000000000000000000000000000000000000000000000000000602082015260228101919091526042810186905260620160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015613573573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906135a95750866001600160a01b0316816001600160a01b0316145b61361a5760405162461bcd60e51b8152602060048201526024808201527f417263683a3a76616c69646174655369673a20696e76616c6964207369676e6160448201527f74757265000000000000000000000000000000000000000000000000000000006064820152608401610d00565b50505050505050565b61362b613ab6565b6000613635613b41565b9050816136b457600a548110156136b45760405162461bcd60e51b815260206004820152603060248201527f5661726961626c655265776172647353747261746567793a3a5265696e76657360448201527f7420616d6f756e7420746f6f206c6f77000000000000000000000000000000006064820152608401610d00565b6000612710600f54836136c79190614bda565b6136d19190614bf9565b9050801561371357600954613713906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683612c0b565b6000612710600e54846137269190614bda565b6137309190614bf9565b9050801561376c5761376c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612c0b565b600061378b8261377c8587614b0c565b6137869190614b0c565b613e37565b9050600061379882612a05565b90506137a482826139ab565b7fc7606d21ac05cd309191543e409f0845c016120563783d70e4f41419dc0ef2346137cd6112b5565b6002546040805192835260208301919091520160405180910390a1505050505050565b6000613845826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166142629092919063ffffffff16565b8051909150156121cb57808060200190518101906138639190614b3b565b6121cb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610d00565b600081116139255760405162461bcd60e51b815260206004820152601260248201527f5f6d696e743a3a7a65726f2073686172657300000000000000000000000000006044820152606401610d00565b806002546139339190614b23565b6002556001600160a01b03821660009081526004602052604090205461395a908290614b23565b6001600160a01b0383166000818152600460205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612d139085815260200190565b60008211613a215760405162461bcd60e51b815260206004820152602d60248201527f5661726961626c655265776172647353747261746567793a3a5374616b65206160448201527f6d6f756e7420746f6f206c6f77000000000000000000000000000000000000006064820152608401610d00565b610db28282614271565b600080826001600160a01b0316846001600160a01b031610613a4e578284613a51565b83835b915091509250929050565b600080613a6b83612710614b0c565b613a759087614bda565b90506000613a838583614bda565b9050600082613a9461271089614bda565b613a9e9190614b23565b9050613aaa8183614bf9565b98975050505050505050565b6040517f18fccc760000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906318fccc7690604401613260565b6040516370a0823160e01b815230600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015613baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bce9190614bc1565b60115490915060005b81811015613e2f57600060118281548110613bf457613bf4614b7c565b6000918252602090912001546001600160a01b0390811691507f0000000000000000000000000000000000000000000000000000000000000000168103613d1f57478015613cb1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613c9757600080fd5b505af1158015613cab573d6000803e3d6000fd5b50505050505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603613d1d57613d148186614b23565b94505050613e1d565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015613d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d8a9190614bc1565b90508015613e1a576001600160a01b03808316600090815260106020526040902060010154168015613e1857613e0b82847f00000000000000000000000000000000000000000000000000000000000000008460106000896001600160a01b03166001600160a01b0316815260200190815260200160002060020154614497565b613e159087614b23565b95505b505b50505b80613e2781614b92565b915050613bd7565b509092915050565b6040517f128acb080000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000015156024820152604481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116606483015260a06084830152600060a4830181905291829182917f00000000000000000000000000000000000000000000000000000000000000009091169063128acb089060c40160408051808303816000875af1158015613f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f479190614b58565b915091507f0000000000000000000000000000000000000000000000000000000000000000613f7e57613f7982614d57565b613f87565b613f8781614d57565b93507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146140515761404e847f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000614634565b93505b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156140e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141049190614b3b565b5060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff81111561414057614140614cd3565b604051908082528060200260200182016040528015614169578160200160208202803683370190505b50905084817f00000000000000000000000000000000000000000000000000000000000000008151811061419f5761419f614b7c565b60209081029190910101526040517f4d49e87d0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634d49e87d9061421690849060009060001990600401614d8f565b6020604051808303816000875af1158015614235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142599190614bc1565b95945050505050565b60606128ef8484600085614644565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015614300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143249190614b3b565b506040517f8dbdbe6d0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390523060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638dbdbe6d90606401600060405180830381600087803b1580156143cc57600080fd5b505af11580156143e0573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301527f000000000000000000000000000000000000000000000000000000000000000016925063095ea7b391506044016020604051808303816000875af1158015614473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121cb9190614b3b565b6000806144a48686613a2b565b509050600080856001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156144e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061450c9190614d07565b5091509150876001600160a01b0316836001600160a01b03161461452c57905b60008061455b8b856dffffffffffffffffffffffffffff16856dffffffffffffffffffffffffffff168a613a5c565b9050896001600160a01b0316856001600160a01b03161461457857905b61458c6001600160a01b038b16898d612c0b565b604080516000815260208101918290527f022c0d9f000000000000000000000000000000000000000000000000000000009091526001600160a01b0389169063022c0d9f906145e49085908590309060248101614ddc565b600060405180830381600087803b1580156145fe57600080fd5b505af1158015614612573d6000803e3d6000fd5b505050508181116146235781614625565b805b9b9a5050505050505050505050565b600061425985858585601e614497565b6060824710156146bc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610d00565b6001600160a01b0385163b6147135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d00565b600080866001600160a01b0316858760405161472f9190614e14565b60006040518083038185875af1925050503d806000811461476c576040519150601f19603f3d011682016040523d82523d6000602084013e614771565b606091505b509150915061478182828661478c565b979650505050505050565b6060831561479b575081610c7a565b8251156147ab5782518084602001fd5b8160405162461bcd60e51b8152600401610d00919061481d565b60005b838110156147e05781810151838201526020016147c8565b83811115611d505750506000910152565b600081518084526148098160208601602086016147c5565b601f01601f19169290920160200192915050565b602081526000610c7a60208301846147f1565b6001600160a01b0381168114611d6057600080fd5b6000806040838503121561485857600080fd5b823561486381614830565b946020939093013593505050565b60006020828403121561488357600080fd5b5035919050565b60008060006060848603121561489f57600080fd5b83356148aa81614830565b925060208401356148ba81614830565b929592945050506040919091013590565b600080604083850312156148de57600080fd5b82356148e981614830565b915060208301356148f981614830565b809150509250929050565b60006020828403121561491657600080fd5b8135610c7a81614830565b803560ff8116811461493257600080fd5b919050565b600080600080600060a0868803121561494f57600080fd5b853594506020860135935061496660408701614921565b94979396509394606081013594506080013592915050565b8015158114611d6057600080fd5b60006020828403121561499e57600080fd5b8135610c7a8161497e565b600080604083850312156149bc57600080fd5b8235915060208301356148f98161497e565b600080600080600080600060e0888a0312156149e957600080fd5b87356149f481614830565b96506020880135614a0481614830565b95506040880135945060608801359350614a2060808901614921565b925060a0880135915060c0880135905092959891949750929550565b60008060008060608587031215614a5257600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115614a7857600080fd5b818701915087601f830112614a8c57600080fd5b813581811115614a9b57600080fd5b886020828501011115614aad57600080fd5b95989497505060200194505050565b600181811c90821680614ad057607f821691505b602082108103614af057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015614b1e57614b1e614af6565b500390565b60008219821115614b3657614b36614af6565b500190565b600060208284031215614b4d57600080fd5b8151610c7a8161497e565b60008060408385031215614b6b57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b600060018201614ba457614ba4614af6565b5060010190565b634e487b7160e01b600052603160045260246000fd5b600060208284031215614bd357600080fd5b5051919050565b6000816000190483118215151615614bf457614bf4614af6565b500290565b600082614c1657634e487b7160e01b600052601260045260246000fd5b500490565b600080835481600182811c915080831680614c3757607f831692505b60208084108203614c5657634e487b7160e01b86526022600452602486fd5b818015614c6a5760018114614c7b57614ca8565b60ff19861689528489019650614ca8565b60008a81526020902060005b86811015614ca05781548b820152908501908301614c87565b505084890196505b509498975050505050505050565b600060208284031215614cc857600080fd5b8151610c7a81614830565b634e487b7160e01b600052604160045260246000fd5b80516dffffffffffffffffffffffffffff8116811461493257600080fd5b600080600060608486031215614d1c57600080fd5b614d2584614ce9565b9250614d3360208501614ce9565b9150604084015163ffffffff81168114614d4c57600080fd5b809150509250925092565b60007f80000000000000000000000000000000000000000000000000000000000000008203614d8857614d88614af6565b5060000390565b606080825284519082018190526000906020906080840190828801845b82811015614dc857815184529284019290840190600101614dac565b505050908301949094525060400152919050565b8481528360208201526001600160a01b0383166040820152608060608201526000614e0a60808301846147f1565b9695505050505050565b60008251614e268184602087016147c5565b919091019291505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212200042900a715d50697e6555659b39402fa4adbe783d5ded32ecb0a127538a667364736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowDepositor(address)": {
        "params": {
          "depositor": "address"
        }
      },
      "allowance(address,address)": {
        "params": {
          "account": "The address of the account holding the funds",
          "spender": "The address of the account spending the funds"
        },
        "returns": {
          "_0": "The number of tokens approved"
        }
      },
      "approve(address,uint256)": {
        "details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve) It is recommended to use increaseAllowance and decreaseAllowance instead",
        "params": {
          "amount": "The number of tokens that are approved (2^256-1 means infinite)",
          "spender": "The address of the account which may transfer tokens"
        },
        "returns": {
          "_0": "Whether or not the approval succeeded"
        }
      },
      "balanceOf(address)": {
        "params": {
          "account": "The address of the account to get the balance of"
        },
        "returns": {
          "_0": "The number of tokens held"
        }
      },
      "checkReward()": {
        "returns": {
          "_0": "reward tokens"
        }
      },
      "deposit(uint256)": {
        "params": {
          "_amount": "Amount of tokens to deposit"
        }
      },
      "depositWithPermit(uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "_amount": "Amount of tokens to deposit",
          "_deadline": "The time at which to expire the signature",
          "_r": "Half of the ECDSA signature pair",
          "_s": "Half of the ECDSA signature pair",
          "_v": "The recovery byte of the signature"
        }
      },
      "estimateDeployedBalance()": {
        "returns": {
          "_0": "deposit tokens after withdraw fee"
        }
      },
      "estimateReinvestReward()": {
        "returns": {
          "_0": "reward tokens"
        }
      },
      "getDepositTokensForShares(uint256)": {
        "params": {
          "amount": "receipt tokens"
        },
        "returns": {
          "_0": "deposit tokens"
        }
      },
      "getDomainSeparator()": {
        "returns": {
          "_0": "Separator"
        }
      },
      "getSharesForDepositTokens(uint256)": {
        "details": "If contract is empty, use 1:1 ratioCould return zero shares for very low amounts of deposit tokens",
        "params": {
          "amount": "deposit tokens"
        },
        "returns": {
          "_0": "receipt tokens"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "deadline": "The time at which to expire the signature",
          "owner": "The address to approve from",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "spender": "The address to be approved",
          "v": "The recovery byte of the signature",
          "value": "The number of tokens that are approved (2^256-1 means infinite)"
        }
      },
      "recoverAVAX(uint256)": {
        "params": {
          "amount": "amount"
        }
      },
      "recoverERC20(address,uint256)": {
        "params": {
          "tokenAddress": "token address",
          "tokenAmount": "amount to recover"
        }
      },
      "removeDepositor(address)": {
        "params": {
          "depositor": "address"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revokeAllowance(address,address)": {
        "params": {
          "spender": "address",
          "token": "address"
        }
      },
      "totalDeposits()": {
        "returns": {
          "_0": "total deposits available on the contract"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account"
        },
        "returns": {
          "_0": "Whether or not the transfer succeeded"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account",
          "src": "The address of the source account"
        },
        "returns": {
          "_0": "Whether or not the transfer succeeded"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateAdminFee(uint256)": {
        "details": "Deprecated; Kept for compatibility",
        "params": {
          "newValue": "fee in BIPS; required to be 0"
        }
      },
      "updateDepositsEnabled(bool)": {
        "params": {
          "newValue": "bool"
        }
      },
      "updateDevAddr(address)": {
        "params": {
          "newValue": "address"
        }
      },
      "updateDevFee(uint256)": {
        "params": {
          "newValue": "fee in BIPS"
        }
      },
      "updateMaxTokensToDepositWithoutReinvest(uint256)": {
        "params": {
          "newValue": "threshold"
        }
      },
      "updateMinTokensToReinvest(uint256)": {
        "params": {
          "newValue": "threshold"
        }
      },
      "updateReinvestReward(uint256)": {
        "params": {
          "newValue": "fee in BIPS"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowDepositor(address)": {
        "notice": "Add an allowed depositor"
      },
      "allowance(address,address)": {
        "notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
      },
      "approve(address,uint256)": {
        "notice": "Approve `spender` to transfer up to `amount` from `src`"
      },
      "balanceOf(address)": {
        "notice": "Get the number of tokens held by the `account`"
      },
      "checkReward()": {
        "notice": "Reward tokens available to strategy, including balance"
      },
      "deposit(uint256)": {
        "notice": "Deposit tokens to receive receipt tokens"
      },
      "depositWithPermit(uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Deposit using Permit"
      },
      "estimateDeployedBalance()": {
        "notice": "Estimate recoverable balance after withdraw fee"
      },
      "estimateReinvestReward()": {
        "notice": "Estimate reinvest reward"
      },
      "getDepositTokensForShares(uint256)": {
        "notice": "Calculate deposit tokens for a given amount of receipt tokens"
      },
      "getDomainSeparator()": {
        "notice": "EIP-712 Domain separator"
      },
      "getSharesForDepositTokens(uint256)": {
        "notice": "Calculate receipt tokens for a given amount of deposit tokens"
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Triggers an approval from owner to spender"
      },
      "recoverAVAX(uint256)": {
        "notice": "Recover AVAX from contract"
      },
      "recoverERC20(address,uint256)": {
        "notice": "Recover ERC20 from contract"
      },
      "reinvest()": {
        "notice": "Reinvest reward tokens into deposit tokens"
      },
      "removeDepositor(address)": {
        "notice": "Remove an allowed depositor"
      },
      "revokeAllowance(address,address)": {
        "notice": "Revoke token allowance"
      },
      "totalDeposits()": {
        "notice": "This function returns a snapshot of last available quotes"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer `amount` tokens from `src` to `dst`"
      },
      "updateAdminFee(uint256)": {
        "notice": "Update admin fee"
      },
      "updateDepositsEnabled(bool)": {
        "notice": "Enable/disable deposits"
      },
      "updateDevAddr(address)": {
        "notice": "Update devAddr"
      },
      "updateDevFee(uint256)": {
        "notice": "Update developer fee"
      },
      "updateMaxTokensToDepositWithoutReinvest(uint256)": {
        "notice": "Update reinvest max threshold before a deposit"
      },
      "updateMinTokensToReinvest(uint256)": {
        "notice": "Update reinvest min threshold"
      },
      "updateReinvestReward(uint256)": {
        "notice": "Update reinvest reward"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 552,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 555,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 560,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 566,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "allowances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 570,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 586,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8327,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "_owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 8436,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "numberOfAllowedDepositors",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 8440,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "allowedDepositors",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1967,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "devAddr",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 1969,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "MIN_TOKENS_TO_REINVEST",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1971,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "MAX_TOKENS_TO_DEPOSIT_WITHOUT_REINVEST",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1973,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "DEPOSITS_ENABLED",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 1975,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "ADMIN_FEE_BIPS",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 1977,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "REINVEST_REWARD_BIPS",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 1979,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "DEV_FEE_BIPS",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 12191,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "rewardSwapPairs",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_struct(RewardSwapPair)12186_storage)"
      },
      {
        "astId": 12194,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "supportedRewards",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 12196,
        "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
        "label": "rewardCount",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(RewardSwapPair)12186_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct VariableRewardsStrategy.RewardSwapPair)",
        "numberOfBytes": "32",
        "value": "t_struct(RewardSwapPair)12186_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(RewardSwapPair)12186_storage": {
        "encoding": "inplace",
        "label": "struct VariableRewardsStrategy.RewardSwapPair",
        "members": [
          {
            "astId": 12181,
            "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
            "label": "reward",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12183,
            "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
            "label": "swapPair",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 12185,
            "contract": "contracts/strategies/arbitrum/synapse/SynapseStrategyV2.sol:SynapseStrategyV2",
            "label": "swapFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}